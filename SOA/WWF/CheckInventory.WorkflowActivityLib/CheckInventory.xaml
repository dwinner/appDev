<Activity mc:Ignorable="sap sap2010 sads" x:Class="CheckInventory.WorkflowActivityLib.CheckInvActivity"
 xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities"
 xmlns:af="clr-namespace:Autolot.FakeLib;assembly=Autolot.FakeLib"
 xmlns:local="clr-namespace:CheckInventory.WorkflowActivityLib"
 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
 xmlns:mca="clr-namespace:Microsoft.CSharp.Activities;assembly=System.Activities"
 xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger"
 xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation"
 xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation"
 xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib"
 xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib"
 xmlns:sd="clr-namespace:System.Data;assembly=System.Data"
 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="RequestedMake" Type="InArgument(x:String)" />
    <x:Property Name="RequestedColor" Type="InArgument(x:String)" />
    <x:Property Name="FormattedResponse" Type="OutArgument(x:String)" />
  </x:Members>
  <sap2010:ExpressionActivityEditor.ExpressionActivityEditor>C#</sap2010:ExpressionActivityEditor.ExpressionActivityEditor>
  <sap2010:WorkflowViewState.IdRef>CheckInventory.WorkflowActivityLib.Activity1_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Text</x:String>
      <x:String>Autolot.FakeLib</x:String>
      <x:String>System.Xml.Resolvers</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>System.Xml</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.CSharp</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ServiceModel.Activities</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>Autolot.FakeLib</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>CheckInventory.WorkflowActivityLib</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="af:InventoryDalDisLayer" Name="autolotInventory">
        <Variable.Default>
          <mca:CSharpValue x:TypeArguments="af:InventoryDalDisLayer">new InventoryDalDisLayer()</mca:CSharpValue>
        </Variable.Default>
      </Variable>
      <Variable x:TypeArguments="sd:DataTable" Name="inventory" />
    </Sequence.Variables>
    <Assign sap2010:WorkflowViewState.IdRef="Assign_1">
      <Assign.To>
        <OutArgument x:TypeArguments="sd:DataTable">
          <mca:CSharpReference x:TypeArguments="sd:DataTable">inventory</mca:CSharpReference>
        </OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="sd:DataTable">
          <mca:CSharpValue x:TypeArguments="sd:DataTable">autolotInventory.GetAllInventory()</mca:CSharpValue>
        </InArgument>
      </Assign.Value>
    </Assign>
    <If sap2010:WorkflowViewState.IdRef="If_1">
      <If.Condition>
        <InArgument x:TypeArguments="x:Boolean">
          <mca:CSharpValue x:TypeArguments="x:Boolean" xml:space="preserve">(from car in inventory.AsEnumerable()
where (string) car["color"] == RequestedColor
&amp;&amp; (string) car["make"] == RequestedMake
select car).Any()</mca:CSharpValue>
        </InArgument>
      </If.Condition>
      <If.Then>
        <Switch x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="Switch`1_1">
          <Switch.Default>
            <Assign sap2010:WorkflowViewState.IdRef="Assign_2">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">
                  <mca:CSharpReference x:TypeArguments="x:String">FormattedResponse</mca:CSharpReference>
                </OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">
                  <mca:CSharpValue x:TypeArguments="x:String">string.Format("Yes, we have a {0} {1} you can purchase", RequestedColor, RequestedMake)</mca:CSharpValue>
                </InArgument>
              </Assign.Value>
            </Assign>
          </Switch.Default>
          <Switch.Expression>
            <InArgument x:TypeArguments="x:String">
              <mca:CSharpValue x:TypeArguments="x:String">RequestedMake</mca:CSharpValue>
            </InArgument>
          </Switch.Expression>
          <Assign x:Key="Bmw" sap2010:WorkflowViewState.IdRef="Assign_3">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">
                <mca:CSharpReference x:TypeArguments="x:String">FormattedResponse</mca:CSharpReference>
              </OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">
                <mca:CSharpValue x:TypeArguments="x:String" xml:space="preserve">string.Format("Yes sir! We can send you {0} {1} as soon as {2}!",
               RequestedColor, RequestedMake, DateTime.Now)</mca:CSharpValue>
              </InArgument>
            </Assign.Value>
          </Assign>
          <Assign x:Key="Yugo" sap2010:WorkflowViewState.IdRef="Assign_4">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">
                <mca:CSharpReference x:TypeArguments="x:String">FormattedResponse</mca:CSharpReference>
              </OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">
                <mca:CSharpValue x:TypeArguments="x:String" xml:space="preserve">string.Format("Please, we will pay you to get this {0} off out lot!",
               RequestedMake)</mca:CSharpValue>
              </InArgument>
            </Assign.Value>
          </Assign>
        </Switch>
      </If.Then>
      <If.Else>
        <Sequence>
          <local:CreateSalesMemoActivity>
            <local:CreateSalesMemoActivity.Color>
              <InArgument x:TypeArguments="x:String">
                <mca:CSharpValue x:TypeArguments="x:String">RequestedColor</mca:CSharpValue>
              </InArgument>
            </local:CreateSalesMemoActivity.Color>
            <local:CreateSalesMemoActivity.Make>
              <InArgument x:TypeArguments="x:String">
                <mca:CSharpValue x:TypeArguments="x:String">RequestedMake</mca:CSharpValue>
              </InArgument>
            </local:CreateSalesMemoActivity.Make>
            <sap2010:WorkflowViewState.IdRef>CreateSalesMemoActivity_1</sap2010:WorkflowViewState.IdRef>
          </local:CreateSalesMemoActivity>
          <Assign>
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">
                <mca:CSharpReference x:TypeArguments="x:String">FormattedResponse</mca:CSharpReference>
              </OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">Sorry</InArgument>
            </Assign.Value>
            <sap2010:WorkflowViewState.IdRef>Assign_5</sap2010:WorkflowViewState.IdRef>
          </Assign>
          <sap2010:WorkflowViewState.IdRef>Sequence_2</sap2010:WorkflowViewState.IdRef>
        </Sequence>
      </If.Else>
    </If>
    <sads:DebugSymbol.Symbol>d2NHOlxHSVRcZXhwZXJpZW5jZS5uZXRcQ29tbXVuaWNhdGlvblxXb3JrZmxvd1xDaGVja0ludmVudG9yeS5Xb3JrZmxvd0FjdGl2aXR5TGliXENoZWNrSW52ZW50b3J5LnhhbWwZNQOjAQ4CAQE5CzlyAgECPgVJDgIBU0oFoQEKAgEIRgtGbwIBWkELQV4CAVRNC1AkAgEJVAmCARICASWFAQmfARQCAQ9lD2VaAgEmaAt0FAIBRnULgQEUAgE5Vg1hFgIBLIYBC5IBKwIBGJMBC50BFAIBEHARcU4CAU1rEWtoAgFHfRF+MAIBQHgReGgCATpeE16oAQIBM1kTWWoCAS2JARGJAV0CAR+OARGOAVwCARmaATaaATsCAReWARGWAWgCARE=</sads:DebugSymbol.Symbol>
  </Sequence>
  <sap2010:WorkflowViewState.ViewStateManager>
    <sap2010:ViewStateManager>
      <sap2010:ViewStateData Id="Assign_1" sap:VirtualizedContainerService.HintSize="765,62" />
      <sap2010:ViewStateData Id="Assign_2" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="Assign_3" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="Assign_4" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="Switch`1_1" sap:VirtualizedContainerService.HintSize="476,162">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="CreateSalesMemoActivity_1" sap:VirtualizedContainerService.HintSize="242,22" />
      <sap2010:ViewStateData Id="Assign_5" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="Sequence_2" sap:VirtualizedContainerService.HintSize="264,248">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_1" sap:VirtualizedContainerService.HintSize="765,398" />
      <sap2010:ViewStateData Id="Sequence_1" sap:VirtualizedContainerService.HintSize="787,624">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="CheckInventory.WorkflowActivityLib.Activity1_1" sap:VirtualizedContainerService.HintSize="827,704" />
    </sap2010:ViewStateManager>
  </sap2010:WorkflowViewState.ViewStateManager>
</Activity>