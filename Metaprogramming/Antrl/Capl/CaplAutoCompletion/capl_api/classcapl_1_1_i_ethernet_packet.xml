<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="classcapl_1_1_i_ethernet_packet" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>capl::IEthernetPacket</compoundname>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classcapl_1_1_i_ethernet_packet_1ac19069243aa6310e351bcb8037345137" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void capl::IEthernetPacket::Send</definition>
        <argsstring>()=0</argsstring>
        <name>Send</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CAPLPluginApi.h" line="2001" column="30"/>
      </memberdef>
      <memberdef kind="function" id="classcapl_1_1_i_ethernet_packet_1ad9ae9ac1c3124c5d639b953dd84694eb" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>QWORD</type>
        <definition>virtual QWORD capl::IEthernetPacket::Time_NS</definition>
        <argsstring>() const =0</argsstring>
        <name>Time_NS</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Point in time, units: nanoseconds <simplesect kind="return"><para>QWord </para>
</simplesect>
<simplesect kind="note"><para>EthernetPacket. &quot;Time_NS&quot; field </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CAPLPluginApi.h" line="2008" column="31"/>
      </memberdef>
      <memberdef kind="function" id="classcapl_1_1_i_ethernet_packet_1a2fb84f028a60519b8dd61ce11960f606" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>BYTE</type>
        <definition>virtual BYTE capl::IEthernetPacket::DIR</definition>
        <argsstring>() const =0</argsstring>
        <name>DIR</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Byte </para>
</simplesect>
<simplesect kind="note"><para>EthernetPacket. &quot;DIR&quot; field </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CAPLPluginApi.h" line="2014" column="30"/>
      </memberdef>
      <memberdef kind="function" id="classcapl_1_1_i_ethernet_packet_1a55ff34be5b808a6e105f94cb64be56d2" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>WORD &amp;</type>
        <definition>virtual WORD &amp; capl::IEthernetPacket::MsgChannel</definition>
        <argsstring>()=0</argsstring>
        <name>MsgChannel</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Word </para>
</simplesect>
<simplesect kind="note"><para>EthernetPacket. &quot;MsgChannel&quot; field </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CAPLPluginApi.h" line="2020" column="32"/>
      </memberdef>
      <memberdef kind="function" id="classcapl_1_1_i_ethernet_packet_1a91552cde2077ebfecd53cb7f2ab156a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>WORD &amp;</type>
        <definition>virtual WORD &amp; capl::IEthernetPacket::Length</definition>
        <argsstring>()=0</argsstring>
        <name>Length</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Length of Ethernet payload data (starting after the Ethertype) <simplesect kind="return"><para>Word </para>
</simplesect>
<simplesect kind="note"><para>EthernetPacket. &quot;Length&quot; field </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CAPLPluginApi.h" line="2027" column="32"/>
      </memberdef>
      <memberdef kind="function" id="classcapl_1_1_i_ethernet_packet_1ac972f70380beb541c6db40e17fbcd6fe" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>DWORD</type>
        <definition>virtual DWORD capl::IEthernetPacket::FCS</definition>
        <argsstring>() const =0</argsstring>
        <name>FCS</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Ethernet frame checksum. For some Ethernet hardware this value is not available (value 0) <simplesect kind="return"><para>Dword </para>
</simplesect>
<simplesect kind="note"><para>EthernetPacket. &quot;FCS&quot; field </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CAPLPluginApi.h" line="2034" column="31"/>
      </memberdef>
      <memberdef kind="function" id="classcapl_1_1_i_ethernet_packet_1a3582cc4def96577cc861f6ae191df06d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>__int64</type>
        <definition>virtual __int64 capl::IEthernetPacket::FrameLen</definition>
        <argsstring>() const =0</argsstring>
        <name>FrameLen</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Frame duration in ns. For some Ethernet hardware this value is not available (value 0) <simplesect kind="return"><para>INT64 </para>
</simplesect>
<simplesect kind="note"><para>EthernetPacket. &quot;FrameLen&quot; field </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CAPLPluginApi.h" line="2041" column="35"/>
      </memberdef>
      <memberdef kind="function" id="classcapl_1_1_i_ethernet_packet_1abafef5771f48147b210cf64b8498613b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>__int64</type>
        <definition>virtual __int64 capl::IEthernetPacket::SOF</definition>
        <argsstring>() const =0</argsstring>
        <name>SOF</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Start-of-Frame time stamp in ns. For some Ethernet hardware this value is not available (value 0) <simplesect kind="return"><para>INT64 </para>
</simplesect>
<simplesect kind="note"><para>EthernetPacket. &quot;SOF&quot; field </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CAPLPluginApi.h" line="2048" column="35"/>
      </memberdef>
      <memberdef kind="function" id="classcapl_1_1_i_ethernet_packet_1aeb315b7d3aa166bb16408098e6595a6b" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="classcapl_1_1_i_property" kindref="compound">IProperty</ref>&lt; WORD &gt; &amp;</type>
        <definition>virtual IProperty&lt; WORD &gt; &amp; capl::IEthernetPacket::Type</definition>
        <argsstring>()=0</argsstring>
        <name>Type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Ethertype <simplesect kind="return"><para>Word </para>
</simplesect>
<simplesect kind="note"><para>EthernetPacket. &quot;Type&quot; field </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CAPLPluginApi.h" line="2055" column="35"/>
      </memberdef>
      <memberdef kind="function" id="classcapl_1_1_i_ethernet_packet_1adbf4b5ff808e3e00634eca62a57b8cc2" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>__int32 &amp;</type>
        <definition>virtual __int32 &amp; capl::IEthernetPacket::TypeInternal</definition>
        <argsstring>()=0</argsstring>
        <name>TypeInternal</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CAPLPluginApi.h" line="2056" column="37"/>
      </memberdef>
      <memberdef kind="function" id="classcapl_1_1_i_ethernet_packet_1a7eb61477f7d8957de262e63bb1a35fc3" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>QWORD &amp;</type>
        <definition>virtual QWORD &amp; capl::IEthernetPacket::Source</definition>
        <argsstring>()=0</argsstring>
        <name>Source</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Source Ethernet MAC address. Only 6 bytes of the QWord are used and network byte order is used <simplesect kind="return"><para>QWord </para>
</simplesect>
<simplesect kind="note"><para>EthernetPacket. &quot;Source&quot; field </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CAPLPluginApi.h" line="2063" column="33"/>
      </memberdef>
      <memberdef kind="function" id="classcapl_1_1_i_ethernet_packet_1a756d7b34de493871b99ba128f053109a" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>QWORD &amp;</type>
        <definition>virtual QWORD &amp; capl::IEthernetPacket::Destination</definition>
        <argsstring>()=0</argsstring>
        <name>Destination</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Destination Ethernet MAC address. Only 6 bytes of the QWord are used and network byte order is used <simplesect kind="return"><para>QWord </para>
</simplesect>
<simplesect kind="note"><para>EthernetPacket. &quot;Destination&quot; field </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CAPLPluginApi.h" line="2070" column="33"/>
      </memberdef>
      <memberdef kind="function" id="classcapl_1_1_i_ethernet_packet_1a33432b566d3fe80bb00291ef4b7eb7b5" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>BYTE &amp;</type>
        <definition>virtual BYTE &amp; capl::IEthernetPacket::Byte</definition>
        <argsstring>(__int32 byteIndex)=0</argsstring>
        <name>Byte</name>
        <param>
          <type>__int32</type>
          <declname>byteIndex</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Message data byte (unsigned 8 bit); Offset 0 is the byte directly after the Ethertype <simplesect kind="return"><para>Byte </para>
</simplesect>
<simplesect kind="note"><para>EthernetPacket. &quot;Byte(x)&quot; field </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CAPLPluginApi.h" line="2077" column="32"/>
      </memberdef>
      <memberdef kind="function" id="classcapl_1_1_i_ethernet_packet_1a963d0525cbfc69dcd4dbd30e3532f2e9" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>WORD &amp;</type>
        <definition>virtual WORD &amp; capl::IEthernetPacket::Word</definition>
        <argsstring>(__int32 byteIndex)=0</argsstring>
        <name>Word</name>
        <param>
          <type>__int32</type>
          <declname>byteIndex</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Message data word (unsigned 16 bit); Offset 0 is the word directly after the Ethertype <simplesect kind="return"><para>Word </para>
</simplesect>
<simplesect kind="note"><para>EthernetPacket. &quot;Word(x)&quot; field </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CAPLPluginApi.h" line="2084" column="32"/>
      </memberdef>
      <memberdef kind="function" id="classcapl_1_1_i_ethernet_packet_1aea2c5b3894a8f9970ec923e3d53badd8" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>DWORD &amp;</type>
        <definition>virtual DWORD &amp; capl::IEthernetPacket::Dword</definition>
        <argsstring>(__int32 byteIndex)=0</argsstring>
        <name>Dword</name>
        <param>
          <type>__int32</type>
          <declname>byteIndex</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Message data word (unsigned 32 bit); Offset 0 is the dword directly after the Ethertype <simplesect kind="return"><para>Dword </para>
</simplesect>
<simplesect kind="note"><para>EthernetPacket. &quot;Dword(x)&quot; field </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CAPLPluginApi.h" line="2091" column="33"/>
      </memberdef>
      <memberdef kind="function" id="classcapl_1_1_i_ethernet_packet_1a3f20f8ba5b3591a31e61b172876d99e7" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>QWORD &amp;</type>
        <definition>virtual QWORD &amp; capl::IEthernetPacket::Qword</definition>
        <argsstring>(__int32 byteIndex)=0</argsstring>
        <name>Qword</name>
        <param>
          <type>__int32</type>
          <declname>byteIndex</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Message data word (unsigned 64 bit); Offset 0 is the qword directly after the Ethertype <simplesect kind="return"><para>Qword </para>
</simplesect>
<simplesect kind="note"><para>EthernetPacket. &quot;Qword(x)&quot; field </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CAPLPluginApi.h" line="2098" column="33"/>
      </memberdef>
      <memberdef kind="function" id="classcapl_1_1_i_ethernet_packet_1a13c612a31e2dea595fc63aeb2c95aaab" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>char &amp;</type>
        <definition>virtual char &amp; capl::IEthernetPacket::Char</definition>
        <argsstring>(__int32 byteIndex)=0</argsstring>
        <name>Char</name>
        <param>
          <type>__int32</type>
          <declname>byteIndex</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Message data byte (signed 8 bit); Offset 0 is the byte directly after the Ethertype. <simplesect kind="return"><para>Char </para>
</simplesect>
<simplesect kind="note"><para>EthernetPacket. &quot;Char(x)&quot; field </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CAPLPluginApi.h" line="2105" column="32"/>
      </memberdef>
      <memberdef kind="function" id="classcapl_1_1_i_ethernet_packet_1a8884567513b59f95c18f1f21ed9761e8" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>short &amp;</type>
        <definition>virtual short &amp; capl::IEthernetPacket::Short</definition>
        <argsstring>(__int32 byteIndex)=0</argsstring>
        <name>Short</name>
        <param>
          <type>__int32</type>
          <declname>byteIndex</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CAPLPluginApi.h" line="2106" column="33"/>
      </memberdef>
      <memberdef kind="function" id="classcapl_1_1_i_ethernet_packet_1a9741eb1de61c2548eb436eb16bb15e77" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>__int32 &amp;</type>
        <definition>virtual __int32 &amp; capl::IEthernetPacket::Long</definition>
        <argsstring>(__int32 byteIndex)=0</argsstring>
        <name>Long</name>
        <param>
          <type>__int32</type>
          <declname>byteIndex</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Message data word (signed 32 bit); Offset 0 is the long directly after the Ethertype. <simplesect kind="return"><para>Long </para>
</simplesect>
<simplesect kind="note"><para>EthernetPacket. &quot;Long(x)&quot; field </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CAPLPluginApi.h" line="2113" column="37"/>
      </memberdef>
      <memberdef kind="function" id="classcapl_1_1_i_ethernet_packet_1a290c001574deb7a85e82bcc8bf859d7e" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>__int64 &amp;</type>
        <definition>virtual __int64 &amp; capl::IEthernetPacket::LongLong</definition>
        <argsstring>(__int32 byteIndex)=0</argsstring>
        <name>LongLong</name>
        <param>
          <type>__int32</type>
          <declname>byteIndex</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CAPLPluginApi.h" line="2114" column="37"/>
      </memberdef>
      <memberdef kind="function" id="classcapl_1_1_i_ethernet_packet_1a1a39812e70a35c8410af1716e63c227f" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void capl::IEthernetPacket::CopyData</definition>
        <argsstring>(IEthernetPacket &amp;msg)=0</argsstring>
        <name>CopyData</name>
        <param>
          <type><ref refid="classcapl_1_1_i_ethernet_packet" kindref="compound">IEthernetPacket</ref> &amp;</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CAPLPluginApi.h" line="2115" column="30"/>
      </memberdef>
      <memberdef kind="function" id="classcapl_1_1_i_ethernet_packet_1a184ad67cfecb1938897cfe9d06c9471a" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void capl::IEthernetPacket::StartGenerator</definition>
        <argsstring>(DWORD transmissionRate, DWORD numberOfFrames, DWORD counterByteOffset)=0</argsstring>
        <name>StartGenerator</name>
        <param>
          <type>DWORD</type>
          <declname>transmissionRate</declname>
        </param>
        <param>
          <type>DWORD</type>
          <declname>numberOfFrames</declname>
        </param>
        <param>
          <type>DWORD</type>
          <declname>counterByteOffset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Starts the Ethernet packet generator that sends continuously the configured packets <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>transmissionRate</parametername>
</parameternamelist>
<parameterdescription>
<para>The rate in frames per second the packet should be transmitted. Range: [1 ... 1000000] </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>numberOfFrames</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of Frames that should be transmitted overall. Range: [0x1 ... 0xFFFFFFFE], 0xFFFFFFFF to send until EthStopPacketGenerator </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>counterByteOffset</parametername>
</parameternamelist>
<parameterdescription>
<para>The position a 4 byte counter is placed inside the Ethernet-payload on a zero based index </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0: Success </para>
</simplesect>
<simplesect kind="return"><para>-1: Output on specified Ethernet channel not allowed </para>
</simplesect>
<simplesect kind="return"><para>-2: Packet generator not supported in simulation mode </para>
</simplesect>
<simplesect kind="return"><para>-3: Packet generator is only available with Vector Ethernet network hardware </para>
</simplesect>
<simplesect kind="return"><para>-4: Configuration of packet generator failed </para>
</simplesect>
<simplesect kind="return"><para>-5: Starting of packet generator failed </para>
</simplesect>
<simplesect kind="note"><para>long EthStartPacketGenerator(dword transmissionRate, dword numberOfFrames, dword counterByteOffset ); </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CAPLPluginApi.h" line="2130" column="30"/>
      </memberdef>
      <memberdef kind="function" id="classcapl_1_1_i_ethernet_packet_1abcc7fc76730266f095dca2ed62c02bd9" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void capl::IEthernetPacket::StopGenerator</definition>
        <argsstring>()=0</argsstring>
        <name>StopGenerator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function stops the Ethernet packet generator <simplesect kind="return"><para>0 or error code </para>
</simplesect>
<simplesect kind="note"><para>long EthStopPacketGenerator( ); </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CAPLPluginApi.h" line="2137" column="30"/>
      </memberdef>
      <memberdef kind="function" id="classcapl_1_1_i_ethernet_packet_1a2c2b7664fa5f411a0e633f3c771dbbee" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>__int32</type>
        <definition>virtual __int32 capl::IEthernetPacket::Clear</definition>
        <argsstring>()=0</argsstring>
        <name>Clear</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Removes all elements from the field <simplesect kind="note"><para>void map[int64]::clear(); </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CAPLPluginApi.h" line="2143" column="35"/>
      </memberdef>
      <memberdef kind="function" id="classcapl_1_1_i_ethernet_packet_1ae22c5d077c3249435d86b0acefff8198" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>__int32</type>
        <definition>virtual __int32 capl::IEthernetPacket::CompletePacket</definition>
        <argsstring>()=0</argsstring>
        <name>CompletePacket</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CAPLPluginApi.h" line="2144" column="35"/>
      </memberdef>
      <memberdef kind="function" id="classcapl_1_1_i_ethernet_packet_1a5e8207e8a2787ada7c2c35e1c9ce28a6" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>DWORD</type>
        <definition>virtual DWORD capl::IEthernetPacket::GetData</definition>
        <argsstring>(WORD offset, void *source, WORD length)=0</argsstring>
        <name>GetData</name>
        <param>
          <type>WORD</type>
          <declname>offset</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>source</declname>
        </param>
        <param>
          <type>WORD</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CAPLPluginApi.h" line="2145" column="31"/>
      </memberdef>
      <memberdef kind="function" id="classcapl_1_1_i_ethernet_packet_1a5d22b100f03bc94b8ab3c6d0cb51b9a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>WORD</type>
        <definition>virtual WORD capl::IEthernetPacket::GetProtocolErrorText</definition>
        <argsstring>(char *buffer)=0</argsstring>
        <name>GetProtocolErrorText</name>
        <param>
          <type>char *</type>
          <declname>buffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CAPLPluginApi.h" line="2146" column="30"/>
      </memberdef>
      <memberdef kind="function" id="classcapl_1_1_i_ethernet_packet_1afa5858271ce65f46871713c73560c4ea" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>__int32</type>
        <definition>virtual __int32 capl::IEthernetPacket::GetVlan</definition>
        <argsstring>(WORD &amp;tpid, WORD &amp;tci)=0</argsstring>
        <name>GetVlan</name>
        <param>
          <type>WORD &amp;</type>
          <declname>tpid</declname>
        </param>
        <param>
          <type>WORD &amp;</type>
          <declname>tci</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CAPLPluginApi.h" line="2147" column="35"/>
      </memberdef>
      <memberdef kind="function" id="classcapl_1_1_i_ethernet_packet_1a27e60d09cde0bf8e7f276d621beddb53" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>__int32</type>
        <definition>virtual __int32 capl::IEthernetPacket::GetVlanIndex</definition>
        <argsstring>(DWORD vlanIndex, WORD &amp;tpid, WORD &amp;tci)=0</argsstring>
        <name>GetVlanIndex</name>
        <param>
          <type>DWORD</type>
          <declname>vlanIndex</declname>
        </param>
        <param>
          <type>WORD &amp;</type>
          <declname>tpid</declname>
        </param>
        <param>
          <type>WORD &amp;</type>
          <declname>tci</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CAPLPluginApi.h" line="2148" column="35"/>
      </memberdef>
      <memberdef kind="function" id="classcapl_1_1_i_ethernet_packet_1aa10ae2a508e665bd1e3e425ae38945b6" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>DWORD</type>
        <definition>virtual DWORD capl::IEthernetPacket::GetVlanId</definition>
        <argsstring>()=0</argsstring>
        <name>GetVlanId</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CAPLPluginApi.h" line="2149" column="31"/>
      </memberdef>
      <memberdef kind="function" id="classcapl_1_1_i_ethernet_packet_1ae513750e63f4189c869637d1edf055f1" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>DWORD</type>
        <definition>virtual DWORD capl::IEthernetPacket::GetVlanIdIndex</definition>
        <argsstring>(DWORD vlanIndex)=0</argsstring>
        <name>GetVlanIdIndex</name>
        <param>
          <type>DWORD</type>
          <declname>vlanIndex</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CAPLPluginApi.h" line="2150" column="31"/>
      </memberdef>
      <memberdef kind="function" id="classcapl_1_1_i_ethernet_packet_1acb8710a5b55db1f66b9ef113d96986c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>DWORD</type>
        <definition>virtual DWORD capl::IEthernetPacket::GetVlanPriority</definition>
        <argsstring>()=0</argsstring>
        <name>GetVlanPriority</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CAPLPluginApi.h" line="2151" column="31"/>
      </memberdef>
      <memberdef kind="function" id="classcapl_1_1_i_ethernet_packet_1abce1a01e870cedf96075d250ebef315e" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>DWORD</type>
        <definition>virtual DWORD capl::IEthernetPacket::GetVlanPriorityIndex</definition>
        <argsstring>(DWORD vlanIndex)=0</argsstring>
        <name>GetVlanPriorityIndex</name>
        <param>
          <type>DWORD</type>
          <declname>vlanIndex</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CAPLPluginApi.h" line="2152" column="31"/>
      </memberdef>
      <memberdef kind="function" id="classcapl_1_1_i_ethernet_packet_1a4811454c152bb0f98c24ef9a94bade06" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>WORD</type>
        <definition>virtual WORD capl::IEthernetPacket::HasProtocolError</definition>
        <argsstring>()=0</argsstring>
        <name>HasProtocolError</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CAPLPluginApi.h" line="2153" column="30"/>
      </memberdef>
      <memberdef kind="function" id="classcapl_1_1_i_ethernet_packet_1aab13775bbc78d2d2b12f4ed925cf81b6" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>WORD</type>
        <definition>virtual WORD capl::IEthernetPacket::HasVlan</definition>
        <argsstring>()=0</argsstring>
        <name>HasVlan</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CAPLPluginApi.h" line="2154" column="30"/>
      </memberdef>
      <memberdef kind="function" id="classcapl_1_1_i_ethernet_packet_1a5c4aeacadda54176e3ed679657b12565" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>DWORD</type>
        <definition>virtual DWORD capl::IEthernetPacket::RemoveVlan</definition>
        <argsstring>()=0</argsstring>
        <name>RemoveVlan</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CAPLPluginApi.h" line="2155" column="31"/>
      </memberdef>
      <memberdef kind="function" id="classcapl_1_1_i_ethernet_packet_1a4dd21922fe93ade61c9e21c98eb32436" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>DWORD</type>
        <definition>virtual DWORD capl::IEthernetPacket::RemoveVlanIndex</definition>
        <argsstring>(DWORD vlanIndex)=0</argsstring>
        <name>RemoveVlanIndex</name>
        <param>
          <type>DWORD</type>
          <declname>vlanIndex</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CAPLPluginApi.h" line="2156" column="31"/>
      </memberdef>
      <memberdef kind="function" id="classcapl_1_1_i_ethernet_packet_1a05a4fdfe2095f80aaab7c9b83a75855f" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>DWORD</type>
        <definition>virtual DWORD capl::IEthernetPacket::SetData</definition>
        <argsstring>(WORD offset, const void *source, WORD length)=0</argsstring>
        <name>SetData</name>
        <param>
          <type>WORD</type>
          <declname>offset</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>source</declname>
        </param>
        <param>
          <type>WORD</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CAPLPluginApi.h" line="2157" column="31"/>
      </memberdef>
      <memberdef kind="function" id="classcapl_1_1_i_ethernet_packet_1a5887da5ca6791f3d25d5da5270b29126" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>__int32</type>
        <definition>virtual __int32 capl::IEthernetPacket::SetVlan</definition>
        <argsstring>(WORD tpid, WORD tci)=0</argsstring>
        <name>SetVlan</name>
        <param>
          <type>WORD</type>
          <declname>tpid</declname>
        </param>
        <param>
          <type>WORD</type>
          <declname>tci</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CAPLPluginApi.h" line="2158" column="35"/>
      </memberdef>
      <memberdef kind="function" id="classcapl_1_1_i_ethernet_packet_1a087ab53c4ab18d5f6b25e92d61d907de" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>__int32</type>
        <definition>virtual __int32 capl::IEthernetPacket::SetVlanIndex</definition>
        <argsstring>(DWORD vlanIndex, WORD tpid, WORD tci)=0</argsstring>
        <name>SetVlanIndex</name>
        <param>
          <type>DWORD</type>
          <declname>vlanIndex</declname>
        </param>
        <param>
          <type>WORD</type>
          <declname>tpid</declname>
        </param>
        <param>
          <type>WORD</type>
          <declname>tci</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CAPLPluginApi.h" line="2159" column="35"/>
      </memberdef>
      <memberdef kind="function" id="classcapl_1_1_i_ethernet_packet_1a083906f2887aaa9fe296c3526b811106" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>DWORD</type>
        <definition>virtual DWORD capl::IEthernetPacket::SetVlanId</definition>
        <argsstring>(WORD vlanId)=0</argsstring>
        <name>SetVlanId</name>
        <param>
          <type>WORD</type>
          <declname>vlanId</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CAPLPluginApi.h" line="2160" column="31"/>
      </memberdef>
      <memberdef kind="function" id="classcapl_1_1_i_ethernet_packet_1a56509c83532520bd50fb7bfbf3dfe1a6" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>DWORD</type>
        <definition>virtual DWORD capl::IEthernetPacket::SetVlanIdIndex</definition>
        <argsstring>(DWORD vlanIndex, WORD vlanId)=0</argsstring>
        <name>SetVlanIdIndex</name>
        <param>
          <type>DWORD</type>
          <declname>vlanIndex</declname>
        </param>
        <param>
          <type>WORD</type>
          <declname>vlanId</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CAPLPluginApi.h" line="2161" column="31"/>
      </memberdef>
      <memberdef kind="function" id="classcapl_1_1_i_ethernet_packet_1a4cc63e113b8488b59c5e512eaecd0094" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>DWORD</type>
        <definition>virtual DWORD capl::IEthernetPacket::SetVlanPriority</definition>
        <argsstring>(WORD vlanPriority)=0</argsstring>
        <name>SetVlanPriority</name>
        <param>
          <type>WORD</type>
          <declname>vlanPriority</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CAPLPluginApi.h" line="2162" column="31"/>
      </memberdef>
      <memberdef kind="function" id="classcapl_1_1_i_ethernet_packet_1afeff26c4eef3f9caa60ff16e623a553d" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>DWORD</type>
        <definition>virtual DWORD capl::IEthernetPacket::SetVlanPriorityIndex</definition>
        <argsstring>(DWORD vlanIndex, WORD vlanPriority)=0</argsstring>
        <name>SetVlanPriorityIndex</name>
        <param>
          <type>DWORD</type>
          <declname>vlanIndex</declname>
        </param>
        <param>
          <type>WORD</type>
          <declname>vlanPriority</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CAPLPluginApi.h" line="2163" column="31"/>
      </memberdef>
      <memberdef kind="function" id="classcapl_1_1_i_ethernet_packet_1a85355e3064d7c7deee6b99ebb60a6678" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="classcapl_1_1_i_i_pv4" kindref="compound">IIPv4</ref> &amp;</type>
        <definition>virtual IIPv4 &amp; capl::IEthernetPacket::IPv4</definition>
        <argsstring>()=0</argsstring>
        <name>IPv4</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CAPLPluginApi.h" line="2166" column="31"/>
      </memberdef>
      <memberdef kind="function" id="classcapl_1_1_i_ethernet_packet_1af5b5a8799ff80cddfeeb0fa170016e71" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="classcapl_1_1_i_i_pv6" kindref="compound">IIPv6</ref> &amp;</type>
        <definition>virtual IIPv6 &amp; capl::IEthernetPacket::IPv6</definition>
        <argsstring>()=0</argsstring>
        <name>IPv6</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CAPLPluginApi.h" line="2168" column="31"/>
      </memberdef>
      <memberdef kind="function" id="classcapl_1_1_i_ethernet_packet_1a702adae4628f11242f79d2b573431965" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="classcapl_1_1_i_i_c_m_pv6" kindref="compound">IICMPv6</ref> &amp;</type>
        <definition>virtual IICMPv6 &amp; capl::IEthernetPacket::ICMPv6</definition>
        <argsstring>()=0</argsstring>
        <name>ICMPv6</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CAPLPluginApi.h" line="2169" column="33"/>
      </memberdef>
      <memberdef kind="function" id="classcapl_1_1_i_ethernet_packet_1a60b50b0accd64fabeeefe74491890511" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="classcapl_1_1_i_n_d_p" kindref="compound">INDP</ref> &amp;</type>
        <definition>virtual INDP &amp; capl::IEthernetPacket::NDP</definition>
        <argsstring>()=0</argsstring>
        <name>NDP</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Protocol Designator <simplesect kind="note"><para></para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CAPLPluginApi.h" line="2175" column="30"/>
      </memberdef>
      <memberdef kind="function" id="classcapl_1_1_i_ethernet_packet_1a757d14a6e5023f98635dfd5150781e1f" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="classcapl_1_1_i_t_c_p" kindref="compound">ITCP</ref> &amp;</type>
        <definition>virtual ITCP &amp; capl::IEthernetPacket::TCP</definition>
        <argsstring>()=0</argsstring>
        <name>TCP</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CAPLPluginApi.h" line="2176" column="30"/>
      </memberdef>
      <memberdef kind="function" id="classcapl_1_1_i_ethernet_packet_1ab3cd117cd8932bc410f1fb6632987ef8" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="classcapl_1_1_i_u_d_p" kindref="compound">IUDP</ref> &amp;</type>
        <definition>virtual IUDP &amp; capl::IEthernetPacket::UDP</definition>
        <argsstring>()=0</argsstring>
        <name>UDP</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CAPLPluginApi.h" line="2177" column="30"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="CAPLPluginApi.h" line="1997" column="5" bodyfile="CAPLPluginApi.h" bodystart="1998" bodyend="2178"/>
    <listofallmembers>
      <member refid="classcapl_1_1_i_ethernet_packet_1a33432b566d3fe80bb00291ef4b7eb7b5" prot="public" virt="pure-virtual"><scope>capl::IEthernetPacket</scope><name>Byte</name></member>
      <member refid="classcapl_1_1_i_ethernet_packet_1a13c612a31e2dea595fc63aeb2c95aaab" prot="public" virt="pure-virtual"><scope>capl::IEthernetPacket</scope><name>Char</name></member>
      <member refid="classcapl_1_1_i_ethernet_packet_1a2c2b7664fa5f411a0e633f3c771dbbee" prot="public" virt="pure-virtual"><scope>capl::IEthernetPacket</scope><name>Clear</name></member>
      <member refid="classcapl_1_1_i_ethernet_packet_1ae22c5d077c3249435d86b0acefff8198" prot="public" virt="pure-virtual"><scope>capl::IEthernetPacket</scope><name>CompletePacket</name></member>
      <member refid="classcapl_1_1_i_ethernet_packet_1a1a39812e70a35c8410af1716e63c227f" prot="public" virt="pure-virtual"><scope>capl::IEthernetPacket</scope><name>CopyData</name></member>
      <member refid="classcapl_1_1_i_ethernet_packet_1a756d7b34de493871b99ba128f053109a" prot="public" virt="pure-virtual"><scope>capl::IEthernetPacket</scope><name>Destination</name></member>
      <member refid="classcapl_1_1_i_ethernet_packet_1a2fb84f028a60519b8dd61ce11960f606" prot="public" virt="pure-virtual"><scope>capl::IEthernetPacket</scope><name>DIR</name></member>
      <member refid="classcapl_1_1_i_ethernet_packet_1aea2c5b3894a8f9970ec923e3d53badd8" prot="public" virt="pure-virtual"><scope>capl::IEthernetPacket</scope><name>Dword</name></member>
      <member refid="classcapl_1_1_i_ethernet_packet_1ac972f70380beb541c6db40e17fbcd6fe" prot="public" virt="pure-virtual"><scope>capl::IEthernetPacket</scope><name>FCS</name></member>
      <member refid="classcapl_1_1_i_ethernet_packet_1a3582cc4def96577cc861f6ae191df06d" prot="public" virt="pure-virtual"><scope>capl::IEthernetPacket</scope><name>FrameLen</name></member>
      <member refid="classcapl_1_1_i_ethernet_packet_1a5e8207e8a2787ada7c2c35e1c9ce28a6" prot="public" virt="pure-virtual"><scope>capl::IEthernetPacket</scope><name>GetData</name></member>
      <member refid="classcapl_1_1_i_ethernet_packet_1a5d22b100f03bc94b8ab3c6d0cb51b9a1" prot="public" virt="pure-virtual"><scope>capl::IEthernetPacket</scope><name>GetProtocolErrorText</name></member>
      <member refid="classcapl_1_1_i_ethernet_packet_1afa5858271ce65f46871713c73560c4ea" prot="public" virt="pure-virtual"><scope>capl::IEthernetPacket</scope><name>GetVlan</name></member>
      <member refid="classcapl_1_1_i_ethernet_packet_1aa10ae2a508e665bd1e3e425ae38945b6" prot="public" virt="pure-virtual"><scope>capl::IEthernetPacket</scope><name>GetVlanId</name></member>
      <member refid="classcapl_1_1_i_ethernet_packet_1ae513750e63f4189c869637d1edf055f1" prot="public" virt="pure-virtual"><scope>capl::IEthernetPacket</scope><name>GetVlanIdIndex</name></member>
      <member refid="classcapl_1_1_i_ethernet_packet_1a27e60d09cde0bf8e7f276d621beddb53" prot="public" virt="pure-virtual"><scope>capl::IEthernetPacket</scope><name>GetVlanIndex</name></member>
      <member refid="classcapl_1_1_i_ethernet_packet_1acb8710a5b55db1f66b9ef113d96986c7" prot="public" virt="pure-virtual"><scope>capl::IEthernetPacket</scope><name>GetVlanPriority</name></member>
      <member refid="classcapl_1_1_i_ethernet_packet_1abce1a01e870cedf96075d250ebef315e" prot="public" virt="pure-virtual"><scope>capl::IEthernetPacket</scope><name>GetVlanPriorityIndex</name></member>
      <member refid="classcapl_1_1_i_ethernet_packet_1a4811454c152bb0f98c24ef9a94bade06" prot="public" virt="pure-virtual"><scope>capl::IEthernetPacket</scope><name>HasProtocolError</name></member>
      <member refid="classcapl_1_1_i_ethernet_packet_1aab13775bbc78d2d2b12f4ed925cf81b6" prot="public" virt="pure-virtual"><scope>capl::IEthernetPacket</scope><name>HasVlan</name></member>
      <member refid="classcapl_1_1_i_ethernet_packet_1a702adae4628f11242f79d2b573431965" prot="public" virt="pure-virtual"><scope>capl::IEthernetPacket</scope><name>ICMPv6</name></member>
      <member refid="classcapl_1_1_i_ethernet_packet_1a85355e3064d7c7deee6b99ebb60a6678" prot="public" virt="pure-virtual"><scope>capl::IEthernetPacket</scope><name>IPv4</name></member>
      <member refid="classcapl_1_1_i_ethernet_packet_1af5b5a8799ff80cddfeeb0fa170016e71" prot="public" virt="pure-virtual"><scope>capl::IEthernetPacket</scope><name>IPv6</name></member>
      <member refid="classcapl_1_1_i_ethernet_packet_1a91552cde2077ebfecd53cb7f2ab156a1" prot="public" virt="pure-virtual"><scope>capl::IEthernetPacket</scope><name>Length</name></member>
      <member refid="classcapl_1_1_i_ethernet_packet_1a9741eb1de61c2548eb436eb16bb15e77" prot="public" virt="pure-virtual"><scope>capl::IEthernetPacket</scope><name>Long</name></member>
      <member refid="classcapl_1_1_i_ethernet_packet_1a290c001574deb7a85e82bcc8bf859d7e" prot="public" virt="pure-virtual"><scope>capl::IEthernetPacket</scope><name>LongLong</name></member>
      <member refid="classcapl_1_1_i_ethernet_packet_1a55ff34be5b808a6e105f94cb64be56d2" prot="public" virt="pure-virtual"><scope>capl::IEthernetPacket</scope><name>MsgChannel</name></member>
      <member refid="classcapl_1_1_i_ethernet_packet_1a60b50b0accd64fabeeefe74491890511" prot="public" virt="pure-virtual"><scope>capl::IEthernetPacket</scope><name>NDP</name></member>
      <member refid="classcapl_1_1_i_ethernet_packet_1a3f20f8ba5b3591a31e61b172876d99e7" prot="public" virt="pure-virtual"><scope>capl::IEthernetPacket</scope><name>Qword</name></member>
      <member refid="classcapl_1_1_i_ethernet_packet_1a5c4aeacadda54176e3ed679657b12565" prot="public" virt="pure-virtual"><scope>capl::IEthernetPacket</scope><name>RemoveVlan</name></member>
      <member refid="classcapl_1_1_i_ethernet_packet_1a4dd21922fe93ade61c9e21c98eb32436" prot="public" virt="pure-virtual"><scope>capl::IEthernetPacket</scope><name>RemoveVlanIndex</name></member>
      <member refid="classcapl_1_1_i_ethernet_packet_1ac19069243aa6310e351bcb8037345137" prot="public" virt="pure-virtual"><scope>capl::IEthernetPacket</scope><name>Send</name></member>
      <member refid="classcapl_1_1_i_ethernet_packet_1a05a4fdfe2095f80aaab7c9b83a75855f" prot="public" virt="pure-virtual"><scope>capl::IEthernetPacket</scope><name>SetData</name></member>
      <member refid="classcapl_1_1_i_ethernet_packet_1a5887da5ca6791f3d25d5da5270b29126" prot="public" virt="pure-virtual"><scope>capl::IEthernetPacket</scope><name>SetVlan</name></member>
      <member refid="classcapl_1_1_i_ethernet_packet_1a083906f2887aaa9fe296c3526b811106" prot="public" virt="pure-virtual"><scope>capl::IEthernetPacket</scope><name>SetVlanId</name></member>
      <member refid="classcapl_1_1_i_ethernet_packet_1a56509c83532520bd50fb7bfbf3dfe1a6" prot="public" virt="pure-virtual"><scope>capl::IEthernetPacket</scope><name>SetVlanIdIndex</name></member>
      <member refid="classcapl_1_1_i_ethernet_packet_1a087ab53c4ab18d5f6b25e92d61d907de" prot="public" virt="pure-virtual"><scope>capl::IEthernetPacket</scope><name>SetVlanIndex</name></member>
      <member refid="classcapl_1_1_i_ethernet_packet_1a4cc63e113b8488b59c5e512eaecd0094" prot="public" virt="pure-virtual"><scope>capl::IEthernetPacket</scope><name>SetVlanPriority</name></member>
      <member refid="classcapl_1_1_i_ethernet_packet_1afeff26c4eef3f9caa60ff16e623a553d" prot="public" virt="pure-virtual"><scope>capl::IEthernetPacket</scope><name>SetVlanPriorityIndex</name></member>
      <member refid="classcapl_1_1_i_ethernet_packet_1a8884567513b59f95c18f1f21ed9761e8" prot="public" virt="pure-virtual"><scope>capl::IEthernetPacket</scope><name>Short</name></member>
      <member refid="classcapl_1_1_i_ethernet_packet_1abafef5771f48147b210cf64b8498613b" prot="public" virt="pure-virtual"><scope>capl::IEthernetPacket</scope><name>SOF</name></member>
      <member refid="classcapl_1_1_i_ethernet_packet_1a7eb61477f7d8957de262e63bb1a35fc3" prot="public" virt="pure-virtual"><scope>capl::IEthernetPacket</scope><name>Source</name></member>
      <member refid="classcapl_1_1_i_ethernet_packet_1a184ad67cfecb1938897cfe9d06c9471a" prot="public" virt="pure-virtual"><scope>capl::IEthernetPacket</scope><name>StartGenerator</name></member>
      <member refid="classcapl_1_1_i_ethernet_packet_1abcc7fc76730266f095dca2ed62c02bd9" prot="public" virt="pure-virtual"><scope>capl::IEthernetPacket</scope><name>StopGenerator</name></member>
      <member refid="classcapl_1_1_i_ethernet_packet_1a757d14a6e5023f98635dfd5150781e1f" prot="public" virt="pure-virtual"><scope>capl::IEthernetPacket</scope><name>TCP</name></member>
      <member refid="classcapl_1_1_i_ethernet_packet_1ad9ae9ac1c3124c5d639b953dd84694eb" prot="public" virt="pure-virtual"><scope>capl::IEthernetPacket</scope><name>Time_NS</name></member>
      <member refid="classcapl_1_1_i_ethernet_packet_1aeb315b7d3aa166bb16408098e6595a6b" prot="public" virt="pure-virtual"><scope>capl::IEthernetPacket</scope><name>Type</name></member>
      <member refid="classcapl_1_1_i_ethernet_packet_1adbf4b5ff808e3e00634eca62a57b8cc2" prot="public" virt="pure-virtual"><scope>capl::IEthernetPacket</scope><name>TypeInternal</name></member>
      <member refid="classcapl_1_1_i_ethernet_packet_1ab3cd117cd8932bc410f1fb6632987ef8" prot="public" virt="pure-virtual"><scope>capl::IEthernetPacket</scope><name>UDP</name></member>
      <member refid="classcapl_1_1_i_ethernet_packet_1a963d0525cbfc69dcd4dbd30e3532f2e9" prot="public" virt="pure-virtual"><scope>capl::IEthernetPacket</scope><name>Word</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
