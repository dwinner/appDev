<?xml version='1.0' encoding='UTF-8' standalone='no'?>

<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd"
         version="1.9.2" xml:lang="en-US">
    <compounddef id="classcapl_1_1_i_ethernet_packet_protocol" kind="class" language="C++" prot="public" abstract="yes">
        <compoundname>capl::IEthernetPacketProtocol</compoundname>
        <derivedcompoundref refid="classcapl_1_1_i_i_c_m_pv6" prot="public" virt="non-virtual">capl::IICMPv6</derivedcompoundref>
        <derivedcompoundref refid="classcapl_1_1_i_i_pv4" prot="public" virt="non-virtual">capl::IIPv4</derivedcompoundref>
        <derivedcompoundref refid="classcapl_1_1_i_i_pv6" prot="public" virt="non-virtual">capl::IIPv6</derivedcompoundref>
        <derivedcompoundref refid="classcapl_1_1_i_n_d_p_neighbor_advertisement" prot="public" virt="non-virtual">capl::INDPNeighborAdvertisement</derivedcompoundref>
        <derivedcompoundref refid="classcapl_1_1_i_n_d_p_neighbor_solicitation" prot="public" virt="non-virtual">capl::INDPNeighborSolicitation</derivedcompoundref>
        <derivedcompoundref refid="classcapl_1_1_i_n_d_p_redirect" prot="public" virt="non-virtual">capl::INDPRedirect</derivedcompoundref>
        <derivedcompoundref refid="classcapl_1_1_i_n_d_p_router_advertisement" prot="public" virt="non-virtual">capl::INDPRouterAdvertisement</derivedcompoundref>
        <derivedcompoundref refid="classcapl_1_1_i_n_d_p_router_solicitation" prot="public" virt="non-virtual">capl::INDPRouterSolicitation</derivedcompoundref>
        <derivedcompoundref refid="classcapl_1_1_i_t_c_p" prot="public" virt="non-virtual">capl::ITCP</derivedcompoundref>
        <derivedcompoundref refid="classcapl_1_1_i_u_d_p" prot="public" virt="non-virtual">capl::IUDP</derivedcompoundref>
        <sectiondef kind="public-func">
            <memberdef kind="function" id="classcapl_1_1_i_ethernet_packet_protocol_1af3d897a6e01ca1307e3402bac8ca3ea6"
                       prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
                <type>__int32</type>
                <definition>virtual __int32 capl::IEthernetPacketProtocol::byteLength</definition>
                <argsstring>()=0</argsstring>
                <name>byteLength</name>
                <briefdescription>
                </briefdescription>
                <detaileddescription>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="CAPLPluginApi.h" line="1376" column="35" />
            </memberdef>
            <memberdef kind="function" id="classcapl_1_1_i_ethernet_packet_protocol_1ad75c16f80e01431df2d5550388f7bad5"
                       prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
                <type>__int32</type>
                <definition>virtual __int32 capl::IEthernetPacketProtocol::byteOffset</definition>
                <argsstring>()=0</argsstring>
                <name>byteOffset</name>
                <briefdescription>
                </briefdescription>
                <detaileddescription>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="CAPLPluginApi.h" line="1377" column="35" />
            </memberdef>
            <memberdef kind="function" id="classcapl_1_1_i_ethernet_packet_protocol_1a3a82eae1785e7eb7823fa7a790d25db7"
                       prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
                <type>__int32</type>
                <definition>virtual __int32 capl::IEthernetPacketProtocol::nextOffset</definition>
                <argsstring>()=0</argsstring>
                <name>nextOffset</name>
                <briefdescription>
                </briefdescription>
                <detaileddescription>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="CAPLPluginApi.h" line="1378" column="35" />
            </memberdef>
            <memberdef kind="function" id="classcapl_1_1_i_ethernet_packet_protocol_1a7e0b85de5365949422d44b319c9c9b4b"
                       prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
                <type>BYTE &amp;</type>
                <definition>virtual BYTE &amp; capl::IEthernetPacketProtocol::Byte</definition>
                <argsstring>(__int32 byteIndex)=0</argsstring>
                <name>Byte</name>
                <param>
                    <type>__int32</type>
                    <declname>byteIndex</declname>
                </param>
                <briefdescription>
                </briefdescription>
                <detaileddescription>
                    <para>
                        Message data byte (unsigned 8 bit); Offset 0 is the byte directly after the Ethertype
                        <simplesect kind="return">
                            <para>Byte </para>
                        </simplesect>
                        <simplesect kind="note">
                            <para>ethernetPacket. &quot;Byte(x)&quot; field </para>
                        </simplesect>
                    </para>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="CAPLPluginApi.h" line="1385" column="32" />
            </memberdef>
            <memberdef kind="function" id="classcapl_1_1_i_ethernet_packet_protocol_1a4972ed0ccef2a1dd4c6dec2cfdcb403b"
                       prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
                <type>WORD &amp;</type>
                <definition>virtual WORD &amp; capl::IEthernetPacketProtocol::Word</definition>
                <argsstring>(__int32 byteIndex)=0</argsstring>
                <name>Word</name>
                <param>
                    <type>__int32</type>
                    <declname>byteIndex</declname>
                </param>
                <briefdescription>
                </briefdescription>
                <detaileddescription>
                    <para>
                        Message data word (unsigned 16 bit); Offset 0 is the word directly after the Ethertype
                        <simplesect kind="return">
                            <para>Word </para>
                        </simplesect>
                        <simplesect kind="note">
                            <para>ethernetPacket. &quot;Word(x)&quot; field </para>
                        </simplesect>
                    </para>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="CAPLPluginApi.h" line="1392" column="32" />
            </memberdef>
            <memberdef kind="function" id="classcapl_1_1_i_ethernet_packet_protocol_1a56ef87fe52db2a14705c7f7fce218dbf"
                       prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
                <type>DWORD &amp;</type>
                <definition>virtual DWORD &amp; capl::IEthernetPacketProtocol::Dword</definition>
                <argsstring>(__int32 byteIndex)=0</argsstring>
                <name>Dword</name>
                <param>
                    <type>__int32</type>
                    <declname>byteIndex</declname>
                </param>
                <briefdescription>
                </briefdescription>
                <detaileddescription>
                    <para>
                        Message data word (unsigned 32 bit); Offset 0 is the dword directly after the Ethertype
                        <simplesect kind="return">
                            <para>DWord </para>
                        </simplesect>
                        <simplesect kind="note">
                            <para>ethernetPacket. &quot;DWord(x)&quot; field </para>
                        </simplesect>
                    </para>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="CAPLPluginApi.h" line="1399" column="33" />
            </memberdef>
            <memberdef kind="function" id="classcapl_1_1_i_ethernet_packet_protocol_1ae999ac355b7cea884f0d7df23e30e47a"
                       prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
                <type>QWORD &amp;</type>
                <definition>virtual QWORD &amp; capl::IEthernetPacketProtocol::Qword</definition>
                <argsstring>(__int32 byteIndex)=0</argsstring>
                <name>Qword</name>
                <param>
                    <type>__int32</type>
                    <declname>byteIndex</declname>
                </param>
                <briefdescription>
                </briefdescription>
                <detaileddescription>
                    <para>
                        Message data word (unsigned 64 bit); Offset 0 is the qword directly after the Ethertype
                        <simplesect kind="return">
                            <para>QWord </para>
                        </simplesect>
                        <simplesect kind="note">
                            <para>ethernetPacket. &quot;QWord(x)&quot; field </para>
                        </simplesect>
                    </para>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="CAPLPluginApi.h" line="1406" column="33" />
            </memberdef>
            <memberdef kind="function" id="classcapl_1_1_i_ethernet_packet_protocol_1ae028555aa44b2b4d089f84784bab9818"
                       prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
                <type>char &amp;</type>
                <definition>virtual char &amp; capl::IEthernetPacketProtocol::Char</definition>
                <argsstring>(__int32 byteIndex)=0</argsstring>
                <name>Char</name>
                <param>
                    <type>__int32</type>
                    <declname>byteIndex</declname>
                </param>
                <briefdescription>
                </briefdescription>
                <detaileddescription>
                    <para>
                        Message data byte (signed 8 bit); Offset 0 is the byte directly after the Ethertype
                        <simplesect kind="return">
                            <para>Char </para>
                        </simplesect>
                        <simplesect kind="note">
                            <para>ethernetPacket. &quot;Char(x)&quot; field </para>
                        </simplesect>
                    </para>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="CAPLPluginApi.h" line="1413" column="32" />
            </memberdef>
            <memberdef kind="function" id="classcapl_1_1_i_ethernet_packet_protocol_1a61ff67bd20f13c7f70902139a3de9841"
                       prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
                <type>short &amp;</type>
                <definition>virtual short &amp; capl::IEthernetPacketProtocol::Short</definition>
                <argsstring>(__int32 byteIndex)=0</argsstring>
                <name>Short</name>
                <param>
                    <type>__int32</type>
                    <declname>byteIndex</declname>
                </param>
                <briefdescription>
                </briefdescription>
                <detaileddescription>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="CAPLPluginApi.h" line="1414" column="33" />
            </memberdef>
            <memberdef kind="function" id="classcapl_1_1_i_ethernet_packet_protocol_1aacc10aa8d426f654d6db5cfc8519df3a"
                       prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
                <type>__int32 &amp;</type>
                <definition>virtual __int32 &amp; capl::IEthernetPacketProtocol::Long</definition>
                <argsstring>(__int32 byteIndex)=0</argsstring>
                <name>Long</name>
                <param>
                    <type>__int32</type>
                    <declname>byteIndex</declname>
                </param>
                <briefdescription>
                </briefdescription>
                <detaileddescription>
                    <para>
                        Message data word (signed 32 bit); Offset 0 is the long directly after the Ethertype
                        <simplesect kind="return">
                            <para>Long </para>
                        </simplesect>
                        <simplesect kind="note">
                            <para>ethernetPacket. &quot;Long(x)&quot; field </para>
                        </simplesect>
                    </para>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="CAPLPluginApi.h" line="1421" column="37" />
            </memberdef>
            <memberdef kind="function" id="classcapl_1_1_i_ethernet_packet_protocol_1afbd981a2fe3924fdc098c694da13662c"
                       prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
                <type>__int64 &amp;</type>
                <definition>virtual __int64 &amp; capl::IEthernetPacketProtocol::LongLong</definition>
                <argsstring>(__int32 byteIndex)=0</argsstring>
                <name>LongLong</name>
                <param>
                    <type>__int32</type>
                    <declname>byteIndex</declname>
                </param>
                <briefdescription>
                </briefdescription>
                <detaileddescription>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="CAPLPluginApi.h" line="1422" column="37" />
            </memberdef>
            <memberdef kind="function" id="classcapl_1_1_i_ethernet_packet_protocol_1a17e2f454b4b88e4d0a2ccabb6c1665a2"
                       prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
                <type>DWORD</type>
                <definition>virtual DWORD capl::IEthernetPacketProtocol::SetDataOffset</definition>
                <argsstring>(WORD offset, const void *source, WORD length)=0</argsstring>
                <name>SetDataOffset</name>
                <param>
                    <type>WORD</type>
                    <declname>offset</declname>
                </param>
                <param>
                    <type>const void *</type>
                    <declname>source</declname>
                </param>
                <param>
                    <type>WORD</type>
                    <declname>length</declname>
                </param>
                <briefdescription>
                </briefdescription>
                <detaileddescription>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="CAPLPluginApi.h" line="1424" column="31" />
            </memberdef>
            <memberdef kind="function" id="classcapl_1_1_i_ethernet_packet_protocol_1ab3b3995e13e2885ec7e69a108e97a939"
                       prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
                <type>DWORD</type>
                <definition>virtual DWORD capl::IEthernetPacketProtocol::GetDataOffset</definition>
                <argsstring>(WORD offset, void *source, WORD length)=0</argsstring>
                <name>GetDataOffset</name>
                <param>
                    <type>WORD</type>
                    <declname>offset</declname>
                </param>
                <param>
                    <type>void *</type>
                    <declname>source</declname>
                </param>
                <param>
                    <type>WORD</type>
                    <declname>length</declname>
                </param>
                <briefdescription>
                </briefdescription>
                <detaileddescription>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="CAPLPluginApi.h" line="1425" column="31" />
            </memberdef>
            <memberdef kind="function" id="classcapl_1_1_i_ethernet_packet_protocol_1ac88b4003564a0e8e324f871efce88e4a"
                       prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
                <type>DWORD</type>
                <definition>virtual DWORD capl::IEthernetPacketProtocol::SetData</definition>
                <argsstring>(const void *source, WORD length)=0</argsstring>
                <name>SetData</name>
                <param>
                    <type>const void *</type>
                    <declname>source</declname>
                </param>
                <param>
                    <type>WORD</type>
                    <declname>length</declname>
                </param>
                <briefdescription>
                </briefdescription>
                <detaileddescription>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="CAPLPluginApi.h" line="1426" column="31" />
            </memberdef>
            <memberdef kind="function" id="classcapl_1_1_i_ethernet_packet_protocol_1a8c521930cccbd833489b54768033d386"
                       prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
                <type>DWORD</type>
                <definition>virtual DWORD capl::IEthernetPacketProtocol::GetData</definition>
                <argsstring>(void *source, WORD length)=0</argsstring>
                <name>GetData</name>
                <param>
                    <type>void *</type>
                    <declname>source</declname>
                </param>
                <param>
                    <type>WORD</type>
                    <declname>length</declname>
                </param>
                <briefdescription>
                </briefdescription>
                <detaileddescription>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="CAPLPluginApi.h" line="1427" column="31" />
            </memberdef>
            <memberdef kind="function" id="classcapl_1_1_i_ethernet_packet_protocol_1ae7256f92b0ffd7b8571ab0643e225c5e"
                       prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
                <type>__int32</type>
                <definition>virtual __int32 capl::IEthernetPacketProtocol::Init</definition>
                <argsstring>()=0</argsstring>
                <name>Init</name>
                <briefdescription>
                </briefdescription>
                <detaileddescription>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="CAPLPluginApi.h" line="1429" column="35" />
            </memberdef>
            <memberdef kind="function" id="classcapl_1_1_i_ethernet_packet_protocol_1af9d4516c27afadd84949aad159b7422d"
                       prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
                <type>__int32</type>
                <definition>virtual __int32 capl::IEthernetPacketProtocol::IsAvailable</definition>
                <argsstring>()=0</argsstring>
                <name>IsAvailable</name>
                <briefdescription>
                </briefdescription>
                <detaileddescription>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="CAPLPluginApi.h" line="1430" column="35" />
            </memberdef>
            <memberdef kind="function" id="classcapl_1_1_i_ethernet_packet_protocol_1a0d204ced6e880ed78bbd371393a70039"
                       prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
                <type>__int32</type>
                <definition>virtual __int32 capl::IEthernetPacketProtocol::ResizeData</definition>
                <argsstring>(WORD newLength)=0</argsstring>
                <name>ResizeData</name>
                <param>
                    <type>WORD</type>
                    <declname>newLength</declname>
                </param>
                <briefdescription>
                </briefdescription>
                <detaileddescription>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="CAPLPluginApi.h" line="1431" column="35" />
            </memberdef>
            <memberdef kind="function" id="classcapl_1_1_i_ethernet_packet_protocol_1a9009ffb90167216e0b26a3d30eb1404a"
                       prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
                <type>BYTE *</type>
                <definition>virtual BYTE * capl::IEthernetPacketProtocol::Data</definition>
                <argsstring>()=0</argsstring>
                <name>Data</name>
                <briefdescription>
                </briefdescription>
                <detaileddescription>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="CAPLPluginApi.h" line="1432" column="30" />
            </memberdef>
            <memberdef kind="function" id="classcapl_1_1_i_ethernet_packet_protocol_1ae73092fb840043ad7629f7471275dbd6"
                       prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
                <type>bool</type>
                <definition>virtual bool capl::IEthernetPacketProtocol::CompletePacket</definition>
                <argsstring>()=0</argsstring>
                <name>CompletePacket</name>
                <briefdescription>
                </briefdescription>
                <detaileddescription>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="CAPLPluginApi.h" line="1433" column="30" />
            </memberdef>
        </sectiondef>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inheritancegraph>
            <node id="1">
                <label>capl::IEthernetPacketProtocol</label>
                <link refid="classcapl_1_1_i_ethernet_packet_protocol" />
            </node>
            <node id="2">
                <label>capl::IICMPv6</label>
                <link refid="classcapl_1_1_i_i_c_m_pv6" />
                <childnode refid="1" relation="public-inheritance">
                </childnode>
            </node>
            <node id="3">
                <label>capl::IIPv4</label>
                <link refid="classcapl_1_1_i_i_pv4" />
                <childnode refid="1" relation="public-inheritance">
                </childnode>
            </node>
            <node id="4">
                <label>capl::IIPv6</label>
                <link refid="classcapl_1_1_i_i_pv6" />
                <childnode refid="1" relation="public-inheritance">
                </childnode>
            </node>
            <node id="5">
                <label>capl::INDPNeighborAdvertisement</label>
                <link refid="classcapl_1_1_i_n_d_p_neighbor_advertisement" />
                <childnode refid="1" relation="public-inheritance">
                </childnode>
            </node>
            <node id="6">
                <label>capl::INDPNeighborSolicitation</label>
                <link refid="classcapl_1_1_i_n_d_p_neighbor_solicitation" />
                <childnode refid="1" relation="public-inheritance">
                </childnode>
            </node>
            <node id="7">
                <label>capl::INDPRedirect</label>
                <link refid="classcapl_1_1_i_n_d_p_redirect" />
                <childnode refid="1" relation="public-inheritance">
                </childnode>
            </node>
            <node id="8">
                <label>capl::INDPRouterAdvertisement</label>
                <link refid="classcapl_1_1_i_n_d_p_router_advertisement" />
                <childnode refid="1" relation="public-inheritance">
                </childnode>
            </node>
            <node id="9">
                <label>capl::INDPRouterSolicitation</label>
                <link refid="classcapl_1_1_i_n_d_p_router_solicitation" />
                <childnode refid="1" relation="public-inheritance">
                </childnode>
            </node>
            <node id="10">
                <label>capl::ITCP</label>
                <link refid="classcapl_1_1_i_t_c_p" />
                <childnode refid="1" relation="public-inheritance">
                </childnode>
            </node>
            <node id="11">
                <label>capl::IUDP</label>
                <link refid="classcapl_1_1_i_u_d_p" />
                <childnode refid="1" relation="public-inheritance">
                </childnode>
            </node>
        </inheritancegraph>
        <location file="CAPLPluginApi.h" line="1373" column="5" bodyfile="CAPLPluginApi.h" bodystart="1374"
                  bodyend="1434" />
        <listofallmembers>
            <member refid="classcapl_1_1_i_ethernet_packet_protocol_1a7e0b85de5365949422d44b319c9c9b4b" prot="public"
                    virt="pure-virtual">
                <scope>capl::IEthernetPacketProtocol</scope><name>Byte</name>
            </member>
            <member refid="classcapl_1_1_i_ethernet_packet_protocol_1af3d897a6e01ca1307e3402bac8ca3ea6" prot="public"
                    virt="pure-virtual">
                <scope>capl::IEthernetPacketProtocol</scope><name>byteLength</name>
            </member>
            <member refid="classcapl_1_1_i_ethernet_packet_protocol_1ad75c16f80e01431df2d5550388f7bad5" prot="public"
                    virt="pure-virtual">
                <scope>capl::IEthernetPacketProtocol</scope><name>byteOffset</name>
            </member>
            <member refid="classcapl_1_1_i_ethernet_packet_protocol_1ae028555aa44b2b4d089f84784bab9818" prot="public"
                    virt="pure-virtual">
                <scope>capl::IEthernetPacketProtocol</scope><name>Char</name>
            </member>
            <member refid="classcapl_1_1_i_ethernet_packet_protocol_1ae73092fb840043ad7629f7471275dbd6" prot="public"
                    virt="pure-virtual">
                <scope>capl::IEthernetPacketProtocol</scope><name>CompletePacket</name>
            </member>
            <member refid="classcapl_1_1_i_ethernet_packet_protocol_1a9009ffb90167216e0b26a3d30eb1404a" prot="public"
                    virt="pure-virtual">
                <scope>capl::IEthernetPacketProtocol</scope><name>Data</name>
            </member>
            <member refid="classcapl_1_1_i_ethernet_packet_protocol_1a56ef87fe52db2a14705c7f7fce218dbf" prot="public"
                    virt="pure-virtual">
                <scope>capl::IEthernetPacketProtocol</scope><name>Dword</name>
            </member>
            <member refid="classcapl_1_1_i_ethernet_packet_protocol_1a8c521930cccbd833489b54768033d386" prot="public"
                    virt="pure-virtual">
                <scope>capl::IEthernetPacketProtocol</scope><name>GetData</name>
            </member>
            <member refid="classcapl_1_1_i_ethernet_packet_protocol_1ab3b3995e13e2885ec7e69a108e97a939" prot="public"
                    virt="pure-virtual">
                <scope>capl::IEthernetPacketProtocol</scope><name>GetDataOffset</name>
            </member>
            <member refid="classcapl_1_1_i_ethernet_packet_protocol_1ae7256f92b0ffd7b8571ab0643e225c5e" prot="public"
                    virt="pure-virtual">
                <scope>capl::IEthernetPacketProtocol</scope><name>Init</name>
            </member>
            <member refid="classcapl_1_1_i_ethernet_packet_protocol_1af9d4516c27afadd84949aad159b7422d" prot="public"
                    virt="pure-virtual">
                <scope>capl::IEthernetPacketProtocol</scope><name>IsAvailable</name>
            </member>
            <member refid="classcapl_1_1_i_ethernet_packet_protocol_1aacc10aa8d426f654d6db5cfc8519df3a" prot="public"
                    virt="pure-virtual">
                <scope>capl::IEthernetPacketProtocol</scope><name>Long</name>
            </member>
            <member refid="classcapl_1_1_i_ethernet_packet_protocol_1afbd981a2fe3924fdc098c694da13662c" prot="public"
                    virt="pure-virtual">
                <scope>capl::IEthernetPacketProtocol</scope><name>LongLong</name>
            </member>
            <member refid="classcapl_1_1_i_ethernet_packet_protocol_1a3a82eae1785e7eb7823fa7a790d25db7" prot="public"
                    virt="pure-virtual">
                <scope>capl::IEthernetPacketProtocol</scope><name>nextOffset</name>
            </member>
            <member refid="classcapl_1_1_i_ethernet_packet_protocol_1ae999ac355b7cea884f0d7df23e30e47a" prot="public"
                    virt="pure-virtual">
                <scope>capl::IEthernetPacketProtocol</scope><name>Qword</name>
            </member>
            <member refid="classcapl_1_1_i_ethernet_packet_protocol_1a0d204ced6e880ed78bbd371393a70039" prot="public"
                    virt="pure-virtual">
                <scope>capl::IEthernetPacketProtocol</scope><name>ResizeData</name>
            </member>
            <member refid="classcapl_1_1_i_ethernet_packet_protocol_1ac88b4003564a0e8e324f871efce88e4a" prot="public"
                    virt="pure-virtual">
                <scope>capl::IEthernetPacketProtocol</scope><name>SetData</name>
            </member>
            <member refid="classcapl_1_1_i_ethernet_packet_protocol_1a17e2f454b4b88e4d0a2ccabb6c1665a2" prot="public"
                    virt="pure-virtual">
                <scope>capl::IEthernetPacketProtocol</scope><name>SetDataOffset</name>
            </member>
            <member refid="classcapl_1_1_i_ethernet_packet_protocol_1a61ff67bd20f13c7f70902139a3de9841" prot="public"
                    virt="pure-virtual">
                <scope>capl::IEthernetPacketProtocol</scope><name>Short</name>
            </member>
            <member refid="classcapl_1_1_i_ethernet_packet_protocol_1a4972ed0ccef2a1dd4c6dec2cfdcb403b" prot="public"
                    virt="pure-virtual">
                <scope>capl::IEthernetPacketProtocol</scope><name>Word</name>
            </member>
        </listofallmembers>
    </compounddef>
</doxygen>