<?xml version='1.0' encoding='UTF-8' standalone='no'?>

<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd"
         version="1.9.2" xml:lang="en-US">
    <compounddef id="classcapl_1_1_i_ethernet_packet_protocol_field" kind="class" language="C++" prot="public"
                 abstract="yes">
        <compoundname>capl::IEthernetPacketProtocolField</compoundname>
        <derivedcompoundref refid="classcapl_1_1_i_ethernet_packet_protocol_byte_field" prot="public"
                            virt="non-virtual">
            capl::IEthernetPacketProtocolByteField
        </derivedcompoundref>
        <derivedcompoundref refid="classcapl_1_1_i_ethernet_packet_protocol_d_word_field" prot="public"
                            virt="non-virtual">
            capl::IEthernetPacketProtocolDWordField
        </derivedcompoundref>
        <derivedcompoundref refid="classcapl_1_1_i_ethernet_packet_protocol_q_word_field" prot="public"
                            virt="non-virtual">
            capl::IEthernetPacketProtocolQWordField
        </derivedcompoundref>
        <derivedcompoundref refid="classcapl_1_1_i_ethernet_packet_protocol_word_field" prot="public"
                            virt="non-virtual">
            capl::IEthernetPacketProtocolWordField
        </derivedcompoundref>
        <sectiondef kind="public-func">
            <memberdef kind="function"
                       id="classcapl_1_1_i_ethernet_packet_protocol_field_1a35a81c5067ee4ff955fe5e1ffd819e73"
                       prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
                <type>__int32</type>
                <definition>virtual __int32 capl::IEthernetPacketProtocolField::bitLength</definition>
                <argsstring>()=0</argsstring>
                <name>bitLength</name>
                <briefdescription>
                </briefdescription>
                <detaileddescription>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="CAPLPluginApi.h" line="1288" column="35" />
            </memberdef>
            <memberdef kind="function"
                       id="classcapl_1_1_i_ethernet_packet_protocol_field_1a7306d4b1a36cdaeccad2b62ab7e6ec08"
                       prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
                <type>__int32</type>
                <definition>virtual __int32 capl::IEthernetPacketProtocolField::bitOffset</definition>
                <argsstring>()=0</argsstring>
                <name>bitOffset</name>
                <briefdescription>
                </briefdescription>
                <detaileddescription>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="CAPLPluginApi.h" line="1289" column="35" />
            </memberdef>
            <memberdef kind="function"
                       id="classcapl_1_1_i_ethernet_packet_protocol_field_1a844c3afedfb307009e51a8792dfe03ed"
                       prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
                <type>__int32</type>
                <definition>virtual __int32 capl::IEthernetPacketProtocolField::byteLength</definition>
                <argsstring>()=0</argsstring>
                <name>byteLength</name>
                <briefdescription>
                </briefdescription>
                <detaileddescription>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="CAPLPluginApi.h" line="1290" column="35" />
            </memberdef>
            <memberdef kind="function"
                       id="classcapl_1_1_i_ethernet_packet_protocol_field_1aa844c93de405365eff480323ad90687b"
                       prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
                <type>__int32</type>
                <definition>virtual __int32 capl::IEthernetPacketProtocolField::byteOffset</definition>
                <argsstring>()=0</argsstring>
                <name>byteOffset</name>
                <briefdescription>
                </briefdescription>
                <detaileddescription>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="CAPLPluginApi.h" line="1291" column="35" />
            </memberdef>
            <memberdef kind="function"
                       id="classcapl_1_1_i_ethernet_packet_protocol_field_1a5ef6c31c8cdec4695fca7a7c577ebbd8"
                       prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
                <type><ref refid="classcapl_1_1_i_byte_value" kindref="compound">IByteValue</ref> &amp;</type>
                <definition>virtual IByteValue &amp; capl::IEthernetPacketProtocolField::Byte</definition>
                <argsstring>(__int32 byteIndex)=0</argsstring>
                <name>Byte</name>
                <param>
                    <type>__int32</type>
                    <declname>byteIndex</declname>
                </param>
                <briefdescription>
                </briefdescription>
                <detaileddescription>
                    <para>
                        Message data byte (unsigned 8 bit); Offset 0 is the byte directly after the Ethertype
                        <simplesect kind="return">
                            <para>Byte </para>
                        </simplesect>
                        <simplesect kind="note">
                            <para>ethernetPacket. &quot;Byte(x)&quot; field </para>
                        </simplesect>
                    </para>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="CAPLPluginApi.h" line="1298" column="36" />
            </memberdef>
            <memberdef kind="function"
                       id="classcapl_1_1_i_ethernet_packet_protocol_field_1a34b28e1ee1afa45f7f520b811f1f16bc"
                       prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
                <type><ref refid="classcapl_1_1_i_word_value" kindref="compound">IWordValue</ref> &amp;</type>
                <definition>virtual IWordValue &amp; capl::IEthernetPacketProtocolField::Word</definition>
                <argsstring>(__int32 byteIndex)=0</argsstring>
                <name>Word</name>
                <param>
                    <type>__int32</type>
                    <declname>byteIndex</declname>
                </param>
                <briefdescription>
                </briefdescription>
                <detaileddescription>
                    <para>
                        Message data word (unsigned 16 bit); Offset 0 is the word directly after the Ethertype
                        <simplesect kind="return">
                            <para>Word </para>
                        </simplesect>
                        <simplesect kind="note">
                            <para>ethernetPacket. &quot;Word(x)&quot; field </para>
                        </simplesect>
                    </para>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="CAPLPluginApi.h" line="1305" column="36" />
            </memberdef>
            <memberdef kind="function"
                       id="classcapl_1_1_i_ethernet_packet_protocol_field_1a8d553153c98d7b82f7af848fbce887a4"
                       prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
                <type><ref refid="classcapl_1_1_i_d_word_value" kindref="compound">IDWordValue</ref> &amp;</type>
                <definition>virtual IDWordValue &amp; capl::IEthernetPacketProtocolField::Dword</definition>
                <argsstring>(__int32 byteIndex)=0</argsstring>
                <name>Dword</name>
                <param>
                    <type>__int32</type>
                    <declname>byteIndex</declname>
                </param>
                <briefdescription>
                </briefdescription>
                <detaileddescription>
                    <para>
                        Message data word (unsigned 32 bit); Offset 0 is the dword directly after the Ethertype
                        <simplesect kind="return">
                            <para>DWord </para>
                        </simplesect>
                        <simplesect kind="note">
                            <para>ethernetPacket. &quot;DWord(x)&quot; field </para>
                        </simplesect>
                    </para>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="CAPLPluginApi.h" line="1312" column="37" />
            </memberdef>
            <memberdef kind="function"
                       id="classcapl_1_1_i_ethernet_packet_protocol_field_1afbebb17f2ac12176c7582b74f16149fc"
                       prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
                <type><ref refid="classcapl_1_1_i_q_word_value" kindref="compound">IQWordValue</ref> &amp;</type>
                <definition>virtual IQWordValue &amp; capl::IEthernetPacketProtocolField::Qword</definition>
                <argsstring>(__int32 byteIndex)=0</argsstring>
                <name>Qword</name>
                <param>
                    <type>__int32</type>
                    <declname>byteIndex</declname>
                </param>
                <briefdescription>
                </briefdescription>
                <detaileddescription>
                    <para>
                        Message data word (unsigned 64 bit); Offset 0 is the qword directly after the Ethertype
                        <simplesect kind="return">
                            <para>QWord </para>
                        </simplesect>
                        <simplesect kind="note">
                            <para>ethernetPacket. &quot;QWord(x)&quot; field </para>
                        </simplesect>
                    </para>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="CAPLPluginApi.h" line="1319" column="37" />
            </memberdef>
            <memberdef kind="function"
                       id="classcapl_1_1_i_ethernet_packet_protocol_field_1ae3a0728b6ecef22cd8d3a83e40c023b7"
                       prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
                <type><ref refid="classcapl_1_1_i_char_value" kindref="compound">ICharValue</ref> &amp;</type>
                <definition>virtual ICharValue &amp; capl::IEthernetPacketProtocolField::Char</definition>
                <argsstring>(__int32 byteIndex)=0</argsstring>
                <name>Char</name>
                <param>
                    <type>__int32</type>
                    <declname>byteIndex</declname>
                </param>
                <briefdescription>
                </briefdescription>
                <detaileddescription>
                    <para>
                        Message data byte (signed 8 bit); Offset 0 is the byte directly after the Ethertype
                        <simplesect kind="return">
                            <para>Char </para>
                        </simplesect>
                        <simplesect kind="note">
                            <para>ethernetPacket. &quot;Char(x)&quot; field </para>
                        </simplesect>
                    </para>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="CAPLPluginApi.h" line="1326" column="36" />
            </memberdef>
            <memberdef kind="function"
                       id="classcapl_1_1_i_ethernet_packet_protocol_field_1a16d30b88134399f8e8623fee1a747a7c"
                       prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
                <type><ref refid="classcapl_1_1_i_short_value" kindref="compound">IShortValue</ref> &amp;</type>
                <definition>virtual IShortValue &amp; capl::IEthernetPacketProtocolField::Short</definition>
                <argsstring>(__int32 byteIndex)=0</argsstring>
                <name>Short</name>
                <param>
                    <type>__int32</type>
                    <declname>byteIndex</declname>
                </param>
                <briefdescription>
                </briefdescription>
                <detaileddescription>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="CAPLPluginApi.h" line="1327" column="37" />
            </memberdef>
            <memberdef kind="function"
                       id="classcapl_1_1_i_ethernet_packet_protocol_field_1afaf997adb196bcffc5b7a66a3d40c35d"
                       prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
                <type><ref refid="classcapl_1_1_i_long_value" kindref="compound">ILongValue</ref> &amp;</type>
                <definition>virtual ILongValue &amp; capl::IEthernetPacketProtocolField::Long</definition>
                <argsstring>(__int32 byteIndex)=0</argsstring>
                <name>Long</name>
                <param>
                    <type>__int32</type>
                    <declname>byteIndex</declname>
                </param>
                <briefdescription>
                </briefdescription>
                <detaileddescription>
                    <para>
                        Message data word (signed 32 bit); Offset 0 is the long directly after the Ethertype
                        <simplesect kind="return">
                            <para>Long </para>
                        </simplesect>
                        <simplesect kind="note">
                            <para>ethernetPacket. &quot;Long(x)&quot; field </para>
                        </simplesect>
                    </para>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="CAPLPluginApi.h" line="1334" column="36" />
            </memberdef>
            <memberdef kind="function"
                       id="classcapl_1_1_i_ethernet_packet_protocol_field_1a8543812ebcad291f0bf96a0420eecc4c"
                       prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
                <type><ref refid="classcapl_1_1_i_long_long_value" kindref="compound">ILongLongValue</ref> &amp;</type>
                <definition>virtual ILongLongValue &amp; capl::IEthernetPacketProtocolField::LongLong</definition>
                <argsstring>(__int32 byteIndex)=0</argsstring>
                <name>LongLong</name>
                <param>
                    <type>__int32</type>
                    <declname>byteIndex</declname>
                </param>
                <briefdescription>
                </briefdescription>
                <detaileddescription>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="CAPLPluginApi.h" line="1335" column="40" />
            </memberdef>
            <memberdef kind="function"
                       id="classcapl_1_1_i_ethernet_packet_protocol_field_1a35f1d84c0bbe9f88c7eefc385cf7a3d3"
                       prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
                <type>DWORD</type>
                <definition>virtual DWORD capl::IEthernetPacketProtocolField::SetData</definition>
                <argsstring>(WORD offset, const void *source, WORD length)=0</argsstring>
                <name>SetData</name>
                <param>
                    <type>WORD</type>
                    <declname>offset</declname>
                </param>
                <param>
                    <type>const void *</type>
                    <declname>source</declname>
                </param>
                <param>
                    <type>WORD</type>
                    <declname>length</declname>
                </param>
                <briefdescription>
                </briefdescription>
                <detaileddescription>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="CAPLPluginApi.h" line="1337" column="31" />
            </memberdef>
            <memberdef kind="function"
                       id="classcapl_1_1_i_ethernet_packet_protocol_field_1ae12eeb2397734af3f355e045192d725b"
                       prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
                <type>DWORD</type>
                <definition>virtual DWORD capl::IEthernetPacketProtocolField::GetData</definition>
                <argsstring>(WORD offset, void *source, WORD length)=0</argsstring>
                <name>GetData</name>
                <param>
                    <type>WORD</type>
                    <declname>offset</declname>
                </param>
                <param>
                    <type>void *</type>
                    <declname>source</declname>
                </param>
                <param>
                    <type>WORD</type>
                    <declname>length</declname>
                </param>
                <briefdescription>
                </briefdescription>
                <detaileddescription>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="CAPLPluginApi.h" line="1338" column="31" />
            </memberdef>
            <memberdef kind="function"
                       id="classcapl_1_1_i_ethernet_packet_protocol_field_1aa2aff045c8addc8306eb160909fe2431"
                       prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
                <type>__int32</type>
                <definition>virtual __int32 capl::IEthernetPacketProtocolField::IsAvailable</definition>
                <argsstring>()=0</argsstring>
                <name>IsAvailable</name>
                <briefdescription>
                </briefdescription>
                <detaileddescription>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="CAPLPluginApi.h" line="1339" column="35" />
            </memberdef>
            <memberdef kind="function"
                       id="classcapl_1_1_i_ethernet_packet_protocol_field_1ac915f78cbdaad05e59a5d9a06efb363f"
                       prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
                <type>__int32</type>
                <definition>virtual __int32 capl::IEthernetPacketProtocolField::ParseAddress</definition>
                <argsstring>(const __int8 *addressAsString)=0</argsstring>
                <name>ParseAddress</name>
                <param>
                    <type>const __int8 *</type>
                    <declname>addressAsString</declname>
                </param>
                <briefdescription>
                </briefdescription>
                <detaileddescription>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="CAPLPluginApi.h" line="1341" column="35" />
            </memberdef>
        </sectiondef>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inheritancegraph>
            <node id="2">
                <label>capl::IEthernetPacketProtocolByteField</label>
                <link refid="classcapl_1_1_i_ethernet_packet_protocol_byte_field" />
                <childnode refid="1" relation="public-inheritance">
                </childnode>
            </node>
            <node id="3">
                <label>capl::IEthernetPacketProtocolDWordField</label>
                <link refid="classcapl_1_1_i_ethernet_packet_protocol_d_word_field" />
                <childnode refid="1" relation="public-inheritance">
                </childnode>
            </node>
            <node id="1">
                <label>capl::IEthernetPacketProtocolField</label>
                <link refid="classcapl_1_1_i_ethernet_packet_protocol_field" />
            </node>
            <node id="4">
                <label>capl::IEthernetPacketProtocolQWordField</label>
                <link refid="classcapl_1_1_i_ethernet_packet_protocol_q_word_field" />
                <childnode refid="1" relation="public-inheritance">
                </childnode>
            </node>
            <node id="5">
                <label>capl::IEthernetPacketProtocolWordField</label>
                <link refid="classcapl_1_1_i_ethernet_packet_protocol_word_field" />
                <childnode refid="1" relation="public-inheritance">
                </childnode>
            </node>
        </inheritancegraph>
        <location file="CAPLPluginApi.h" line="1285" column="5" bodyfile="CAPLPluginApi.h" bodystart="1286"
                  bodyend="1342" />
        <listofallmembers>
            <member refid="classcapl_1_1_i_ethernet_packet_protocol_field_1a35a81c5067ee4ff955fe5e1ffd819e73"
                    prot="public" virt="pure-virtual">
                <scope>capl::IEthernetPacketProtocolField</scope><name>bitLength</name>
            </member>
            <member refid="classcapl_1_1_i_ethernet_packet_protocol_field_1a7306d4b1a36cdaeccad2b62ab7e6ec08"
                    prot="public" virt="pure-virtual">
                <scope>capl::IEthernetPacketProtocolField</scope><name>bitOffset</name>
            </member>
            <member refid="classcapl_1_1_i_ethernet_packet_protocol_field_1a5ef6c31c8cdec4695fca7a7c577ebbd8"
                    prot="public" virt="pure-virtual">
                <scope>capl::IEthernetPacketProtocolField</scope><name>Byte</name>
            </member>
            <member refid="classcapl_1_1_i_ethernet_packet_protocol_field_1a844c3afedfb307009e51a8792dfe03ed"
                    prot="public" virt="pure-virtual">
                <scope>capl::IEthernetPacketProtocolField</scope><name>byteLength</name>
            </member>
            <member refid="classcapl_1_1_i_ethernet_packet_protocol_field_1aa844c93de405365eff480323ad90687b"
                    prot="public" virt="pure-virtual">
                <scope>capl::IEthernetPacketProtocolField</scope><name>byteOffset</name>
            </member>
            <member refid="classcapl_1_1_i_ethernet_packet_protocol_field_1ae3a0728b6ecef22cd8d3a83e40c023b7"
                    prot="public" virt="pure-virtual">
                <scope>capl::IEthernetPacketProtocolField</scope><name>Char</name>
            </member>
            <member refid="classcapl_1_1_i_ethernet_packet_protocol_field_1a8d553153c98d7b82f7af848fbce887a4"
                    prot="public" virt="pure-virtual">
                <scope>capl::IEthernetPacketProtocolField</scope><name>Dword</name>
            </member>
            <member refid="classcapl_1_1_i_ethernet_packet_protocol_field_1ae12eeb2397734af3f355e045192d725b"
                    prot="public" virt="pure-virtual">
                <scope>capl::IEthernetPacketProtocolField</scope><name>GetData</name>
            </member>
            <member refid="classcapl_1_1_i_ethernet_packet_protocol_field_1aa2aff045c8addc8306eb160909fe2431"
                    prot="public" virt="pure-virtual">
                <scope>capl::IEthernetPacketProtocolField</scope><name>IsAvailable</name>
            </member>
            <member refid="classcapl_1_1_i_ethernet_packet_protocol_field_1afaf997adb196bcffc5b7a66a3d40c35d"
                    prot="public" virt="pure-virtual">
                <scope>capl::IEthernetPacketProtocolField</scope><name>Long</name>
            </member>
            <member refid="classcapl_1_1_i_ethernet_packet_protocol_field_1a8543812ebcad291f0bf96a0420eecc4c"
                    prot="public" virt="pure-virtual">
                <scope>capl::IEthernetPacketProtocolField</scope><name>LongLong</name>
            </member>
            <member refid="classcapl_1_1_i_ethernet_packet_protocol_field_1ac915f78cbdaad05e59a5d9a06efb363f"
                    prot="public" virt="pure-virtual">
                <scope>capl::IEthernetPacketProtocolField</scope><name>ParseAddress</name>
            </member>
            <member refid="classcapl_1_1_i_ethernet_packet_protocol_field_1afbebb17f2ac12176c7582b74f16149fc"
                    prot="public" virt="pure-virtual">
                <scope>capl::IEthernetPacketProtocolField</scope><name>Qword</name>
            </member>
            <member refid="classcapl_1_1_i_ethernet_packet_protocol_field_1a35f1d84c0bbe9f88c7eefc385cf7a3d3"
                    prot="public" virt="pure-virtual">
                <scope>capl::IEthernetPacketProtocolField</scope><name>SetData</name>
            </member>
            <member refid="classcapl_1_1_i_ethernet_packet_protocol_field_1a16d30b88134399f8e8623fee1a747a7c"
                    prot="public" virt="pure-virtual">
                <scope>capl::IEthernetPacketProtocolField</scope><name>Short</name>
            </member>
            <member refid="classcapl_1_1_i_ethernet_packet_protocol_field_1a34b28e1ee1afa45f7f520b811f1f16bc"
                    prot="public" virt="pure-virtual">
                <scope>capl::IEthernetPacketProtocolField</scope><name>Word</name>
            </member>
        </listofallmembers>
    </compounddef>
</doxygen>