<?xml version='1.0' encoding='UTF-8' standalone='no'?>

<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd"
         version="1.9.2" xml:lang="en-US">
    <compounddef id="classcapl_1_1_i_i_pv6" kind="class" language="C++" prot="public" abstract="yes">
        <compoundname>capl::IIPv6</compoundname>
        <basecompoundref refid="classcapl_1_1_i_ethernet_packet_protocol" prot="public" virt="non-virtual">capl::IEthernetPacketProtocol</basecompoundref>
        <sectiondef kind="public-func">
            <memberdef kind="function" id="classcapl_1_1_i_i_pv6_1ab30bb196db4703157b483fda7b167033" prot="public"
                       static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
                <type>
                    <ref refid="classcapl_1_1_i_ethernet_packet_protocol_byte_field" kindref="compound">IEthernetPacketProtocolByteField</ref>
                    &amp;
                </type>
                <definition>virtual IEthernetPacketProtocolByteField &amp; capl::IIPv6::version</definition>
                <argsstring>()=0</argsstring>
                <name>version</name>
                <briefdescription>
                </briefdescription>
                <detaileddescription>
                    <para>
                        4-bit Internet Protocol version number = 6
                        <simplesect kind="return">
                            <para>Byte </para>
                        </simplesect>
                        <simplesect kind="note">
                            <para>IPv6 protocol Header structure. &quot;Version&quot; field </para>
                        </simplesect>
                    </para>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="CAPLPluginApi.h" line="1541" column="58" />
            </memberdef>
            <memberdef kind="function" id="classcapl_1_1_i_i_pv6_1a8575e7d7ad01055ba0ce5754b6fde76b" prot="public"
                       static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
                <type>
                    <ref refid="classcapl_1_1_i_ethernet_packet_protocol_byte_field" kindref="compound">IEthernetPacketProtocolByteField</ref>
                    &amp;
                </type>
                <definition>virtual IEthernetPacketProtocolByteField &amp; capl::IIPv6::Class</definition>
                <argsstring>()=0</argsstring>
                <name>Class</name>
                <briefdescription>
                </briefdescription>
                <detaileddescription>
                    <para>
                        This eight bit field is available for use by originating nodes and/or forwarding routers to identify and distinguish between different classes or priorities of IPv6 packets
                        <simplesect kind="return">
                            <para>Byte </para>
                        </simplesect>
                        <simplesect kind="note">
                            <para>IPv6 protocol Header structure. &quot;Class&quot; field </para>
                        </simplesect>
                    </para>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="CAPLPluginApi.h" line="1548" column="58" />
            </memberdef>
            <memberdef kind="function" id="classcapl_1_1_i_i_pv6_1abc2eff2db2e3da65137f63fbeb958cf1" prot="public"
                       static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
                <type>
                    <ref refid="classcapl_1_1_i_ethernet_packet_protocol_d_word_field" kindref="compound">IEthernetPacketProtocolDWordField</ref>
                    &amp;
                </type>
                <definition>virtual IEthernetPacketProtocolDWordField &amp; capl::IIPv6::flow</definition>
                <argsstring>()=0</argsstring>
                <name>flow</name>
                <briefdescription>
                </briefdescription>
                <detaileddescription>
                    <para>
                        This field in the IPv6 header may be used by a source to label sequences of packets for which it requests special handling by the IPv6 routers, such as non-default quality of service or &quot;real-time&quot; service
                        <simplesect kind="return">
                            <para>DWord </para>
                        </simplesect>
                        <simplesect kind="note">
                            <para>IPv6 protocol Header structure. &quot;Flow&quot; field </para>
                        </simplesect>
                    </para>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="CAPLPluginApi.h" line="1555" column="59" />
            </memberdef>
            <memberdef kind="function" id="classcapl_1_1_i_i_pv6_1ab1b7e529d02e8d807f50651630addc30" prot="public"
                       static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
                <type>
                    <ref refid="classcapl_1_1_i_ethernet_packet_protocol_word_field" kindref="compound">IEthernetPacketProtocolWordField</ref>
                    &amp;
                </type>
                <definition>virtual IEthernetPacketProtocolWordField &amp; capl::IIPv6::length</definition>
                <argsstring>()=0</argsstring>
                <name>length</name>
                <briefdescription>
                </briefdescription>
                <detaileddescription>
                    <para>
                        Length of the IPv6 payload (without header) and the extension headers
                        <simplesect kind="return">
                            <para>Word </para>
                        </simplesect>
                        <simplesect kind="note">
                            <para>IPv6 protocol Header structure. &quot;Length&quot; field </para>
                        </simplesect>
                    </para>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="CAPLPluginApi.h" line="1562" column="58" />
            </memberdef>
            <memberdef kind="function" id="classcapl_1_1_i_i_pv6_1afa7b5ce59f2d4b0a78fe0fdc19a6df53" prot="public"
                       static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
                <type>
                    <ref refid="classcapl_1_1_i_ethernet_packet_protocol_byte_field" kindref="compound">IEthernetPacketProtocolByteField</ref>
                    &amp;
                </type>
                <definition>virtual IEthernetPacketProtocolByteField &amp; capl::IIPv6::next</definition>
                <argsstring>()=0</argsstring>
                <name>next</name>
                <briefdescription>
                </briefdescription>
                <detaileddescription>
                    <para>
                        This field identifies the type of the next header, this can also be an extension header. The same values as in the IPv4 protocol field are used
                        <simplesect kind="return">
                            <para>Byte </para>
                        </simplesect>
                        <simplesect kind="note">
                            <para>IPv6 protocol Header structure. &quot;Next&quot; field </para>
                        </simplesect>
                    </para>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="CAPLPluginApi.h" line="1569" column="58" />
            </memberdef>
            <memberdef kind="function" id="classcapl_1_1_i_i_pv6_1a6c4d4ea6fa8c0cfec29083cf123791ca" prot="public"
                       static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
                <type>
                    <ref refid="classcapl_1_1_i_ethernet_packet_protocol_byte_field" kindref="compound">IEthernetPacketProtocolByteField</ref>
                    &amp;
                </type>
                <definition>virtual IEthernetPacketProtocolByteField &amp; capl::IIPv6::hopLimit</definition>
                <argsstring>()=0</argsstring>
                <name>hopLimit</name>
                <briefdescription>
                </briefdescription>
                <detaileddescription>
                    <para>
                        This fields sets the maximum number of steps through routers that a packet is allowed to cover. It is decremented by one on passing a router (hops). Packets with a hop limit of 0 are discarded
                        <simplesect kind="return">
                            <para>Byte </para>
                        </simplesect>
                        <simplesect kind="note">
                            <para>IPv6 protocol Header structure. &quot;HopLimit&quot; field </para>
                        </simplesect>
                    </para>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="CAPLPluginApi.h" line="1576" column="58" />
            </memberdef>
            <memberdef kind="function" id="classcapl_1_1_i_i_pv6_1ae3f30e81e499a2496646d9168d519205" prot="public"
                       static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
                <type>
                    <ref refid="classcapl_1_1_i_ethernet_packet_protocol_q_word_field" kindref="compound">IEthernetPacketProtocolQWordField</ref>
                    &amp;
                </type>
                <definition>virtual IEthernetPacketProtocolQWordField &amp; capl::IIPv6::source</definition>
                <argsstring>()=0</argsstring>
                <name>source</name>
                <briefdescription>
                </briefdescription>
                <detaileddescription>
                    <para>
                        128-bit address of the sender of the packet
                        <simplesect kind="return">
                            <para>QWord </para>
                        </simplesect>
                        <simplesect kind="note">
                            <para>IPv6 protocol Header structure. &quot;Source&quot; field </para>
                        </simplesect>
                    </para>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="CAPLPluginApi.h" line="1583" column="59" />
            </memberdef>
            <memberdef kind="function" id="classcapl_1_1_i_i_pv6_1ab8b69342574670c0ce0a113452363cac" prot="public"
                       static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
                <type>
                    <ref refid="classcapl_1_1_i_ethernet_packet_protocol_q_word_field" kindref="compound">IEthernetPacketProtocolQWordField</ref>
                    &amp;
                </type>
                <definition>virtual IEthernetPacketProtocolQWordField &amp; capl::IIPv6::destination</definition>
                <argsstring>()=0</argsstring>
                <name>destination</name>
                <briefdescription>
                </briefdescription>
                <detaileddescription>
                    <para>
                        128-bit address of the receiver of the packet. The receiver is possibly not the final receiver, if a routing header is present
                        <simplesect kind="return">
                            <para>QWord </para>
                        </simplesect>
                        <simplesect kind="note">
                            <para>IPv6 protocol Header structure. &quot;Destination&quot; field </para>
                        </simplesect>
                    </para>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="CAPLPluginApi.h" line="1590" column="59" />
            </memberdef>
        </sectiondef>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inheritancegraph>
            <node id="2">
                <label>capl::IEthernetPacketProtocol</label>
                <link refid="classcapl_1_1_i_ethernet_packet_protocol" />
            </node>
            <node id="1">
                <label>capl::IIPv6</label>
                <link refid="classcapl_1_1_i_i_pv6" />
                <childnode refid="2" relation="public-inheritance">
                </childnode>
            </node>
        </inheritancegraph>
        <collaborationgraph>
            <node id="2">
                <label>capl::IEthernetPacketProtocol</label>
                <link refid="classcapl_1_1_i_ethernet_packet_protocol" />
            </node>
            <node id="1">
                <label>capl::IIPv6</label>
                <link refid="classcapl_1_1_i_i_pv6" />
                <childnode refid="2" relation="public-inheritance">
                </childnode>
            </node>
        </collaborationgraph>
        <location file="CAPLPluginApi.h" line="1532" column="5" bodyfile="CAPLPluginApi.h" bodystart="1533"
                  bodyend="1591" />
        <listofallmembers>
            <member refid="classcapl_1_1_i_ethernet_packet_protocol_1a7e0b85de5365949422d44b319c9c9b4b" prot="public"
                    virt="pure-virtual">
                <scope>capl::IIPv6</scope><name>Byte</name>
            </member>
            <member refid="classcapl_1_1_i_ethernet_packet_protocol_1af3d897a6e01ca1307e3402bac8ca3ea6" prot="public"
                    virt="pure-virtual">
                <scope>capl::IIPv6</scope><name>byteLength</name>
            </member>
            <member refid="classcapl_1_1_i_ethernet_packet_protocol_1ad75c16f80e01431df2d5550388f7bad5" prot="public"
                    virt="pure-virtual">
                <scope>capl::IIPv6</scope><name>byteOffset</name>
            </member>
            <member refid="classcapl_1_1_i_ethernet_packet_protocol_1ae028555aa44b2b4d089f84784bab9818" prot="public"
                    virt="pure-virtual">
                <scope>capl::IIPv6</scope><name>Char</name>
            </member>
            <member refid="classcapl_1_1_i_i_pv6_1a8575e7d7ad01055ba0ce5754b6fde76b" prot="public" virt="pure-virtual">
                <scope>capl::IIPv6</scope><name>Class</name>
            </member>
            <member refid="classcapl_1_1_i_ethernet_packet_protocol_1ae73092fb840043ad7629f7471275dbd6" prot="public"
                    virt="pure-virtual">
                <scope>capl::IIPv6</scope><name>CompletePacket</name>
            </member>
            <member refid="classcapl_1_1_i_ethernet_packet_protocol_1a9009ffb90167216e0b26a3d30eb1404a" prot="public"
                    virt="pure-virtual">
                <scope>capl::IIPv6</scope><name>Data</name>
            </member>
            <member refid="classcapl_1_1_i_i_pv6_1ab8b69342574670c0ce0a113452363cac" prot="public" virt="pure-virtual">
                <scope>capl::IIPv6</scope><name>destination</name>
            </member>
            <member refid="classcapl_1_1_i_ethernet_packet_protocol_1a56ef87fe52db2a14705c7f7fce218dbf" prot="public"
                    virt="pure-virtual">
                <scope>capl::IIPv6</scope><name>Dword</name>
            </member>
            <member refid="classcapl_1_1_i_i_pv6_1abc2eff2db2e3da65137f63fbeb958cf1" prot="public" virt="pure-virtual">
                <scope>capl::IIPv6</scope><name>flow</name>
            </member>
            <member refid="classcapl_1_1_i_ethernet_packet_protocol_1a8c521930cccbd833489b54768033d386" prot="public"
                    virt="pure-virtual">
                <scope>capl::IIPv6</scope><name>GetData</name>
            </member>
            <member refid="classcapl_1_1_i_ethernet_packet_protocol_1ab3b3995e13e2885ec7e69a108e97a939" prot="public"
                    virt="pure-virtual">
                <scope>capl::IIPv6</scope><name>GetDataOffset</name>
            </member>
            <member refid="classcapl_1_1_i_i_pv6_1a6c4d4ea6fa8c0cfec29083cf123791ca" prot="public" virt="pure-virtual">
                <scope>capl::IIPv6</scope><name>hopLimit</name>
            </member>
            <member refid="classcapl_1_1_i_ethernet_packet_protocol_1ae7256f92b0ffd7b8571ab0643e225c5e" prot="public"
                    virt="pure-virtual">
                <scope>capl::IIPv6</scope><name>Init</name>
            </member>
            <member refid="classcapl_1_1_i_ethernet_packet_protocol_1af9d4516c27afadd84949aad159b7422d" prot="public"
                    virt="pure-virtual">
                <scope>capl::IIPv6</scope><name>IsAvailable</name>
            </member>
            <member refid="classcapl_1_1_i_i_pv6_1ab1b7e529d02e8d807f50651630addc30" prot="public" virt="pure-virtual">
                <scope>capl::IIPv6</scope><name>length</name>
            </member>
            <member refid="classcapl_1_1_i_ethernet_packet_protocol_1aacc10aa8d426f654d6db5cfc8519df3a" prot="public"
                    virt="pure-virtual">
                <scope>capl::IIPv6</scope><name>Long</name>
            </member>
            <member refid="classcapl_1_1_i_ethernet_packet_protocol_1afbd981a2fe3924fdc098c694da13662c" prot="public"
                    virt="pure-virtual">
                <scope>capl::IIPv6</scope><name>LongLong</name>
            </member>
            <member refid="classcapl_1_1_i_i_pv6_1afa7b5ce59f2d4b0a78fe0fdc19a6df53" prot="public" virt="pure-virtual">
                <scope>capl::IIPv6</scope><name>next</name>
            </member>
            <member refid="classcapl_1_1_i_ethernet_packet_protocol_1a3a82eae1785e7eb7823fa7a790d25db7" prot="public"
                    virt="pure-virtual">
                <scope>capl::IIPv6</scope><name>nextOffset</name>
            </member>
            <member refid="classcapl_1_1_i_ethernet_packet_protocol_1ae999ac355b7cea884f0d7df23e30e47a" prot="public"
                    virt="pure-virtual">
                <scope>capl::IIPv6</scope><name>Qword</name>
            </member>
            <member refid="classcapl_1_1_i_ethernet_packet_protocol_1a0d204ced6e880ed78bbd371393a70039" prot="public"
                    virt="pure-virtual">
                <scope>capl::IIPv6</scope><name>ResizeData</name>
            </member>
            <member refid="classcapl_1_1_i_ethernet_packet_protocol_1ac88b4003564a0e8e324f871efce88e4a" prot="public"
                    virt="pure-virtual">
                <scope>capl::IIPv6</scope><name>SetData</name>
            </member>
            <member refid="classcapl_1_1_i_ethernet_packet_protocol_1a17e2f454b4b88e4d0a2ccabb6c1665a2" prot="public"
                    virt="pure-virtual">
                <scope>capl::IIPv6</scope><name>SetDataOffset</name>
            </member>
            <member refid="classcapl_1_1_i_ethernet_packet_protocol_1a61ff67bd20f13c7f70902139a3de9841" prot="public"
                    virt="pure-virtual">
                <scope>capl::IIPv6</scope><name>Short</name>
            </member>
            <member refid="classcapl_1_1_i_i_pv6_1ae3f30e81e499a2496646d9168d519205" prot="public" virt="pure-virtual">
                <scope>capl::IIPv6</scope><name>source</name>
            </member>
            <member refid="classcapl_1_1_i_i_pv6_1ab30bb196db4703157b483fda7b167033" prot="public" virt="pure-virtual">
                <scope>capl::IIPv6</scope><name>version</name>
            </member>
            <member refid="classcapl_1_1_i_ethernet_packet_protocol_1a4972ed0ccef2a1dd4c6dec2cfdcb403b" prot="public"
                    virt="pure-virtual">
                <scope>capl::IIPv6</scope><name>Word</name>
            </member>
        </listofallmembers>
    </compounddef>
</doxygen>