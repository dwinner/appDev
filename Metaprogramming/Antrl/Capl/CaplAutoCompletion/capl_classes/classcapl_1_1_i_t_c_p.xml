<?xml version='1.0' encoding='UTF-8' standalone='no'?>

<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd"
         version="1.9.2" xml:lang="en-US">
    <compounddef id="classcapl_1_1_i_t_c_p" kind="class" language="C++" prot="public" abstract="yes">
        <compoundname>capl::ITCP</compoundname>
        <basecompoundref refid="classcapl_1_1_i_ethernet_packet_protocol" prot="public" virt="non-virtual">capl::IEthernetPacketProtocol</basecompoundref>
        <sectiondef kind="public-func">
            <memberdef kind="function" id="classcapl_1_1_i_t_c_p_1a546fd7c7ff8f46ab6012256be3d36a86" prot="public"
                       static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
                <type>
                    <ref refid="classcapl_1_1_i_ethernet_packet_protocol_word_field" kindref="compound">IEthernetPacketProtocolWordField</ref>
                    &amp;
                </type>
                <definition>virtual IEthernetPacketProtocolWordField &amp; capl::ITCP::source</definition>
                <argsstring>()=0</argsstring>
                <name>source</name>
                <briefdescription>
                </briefdescription>
                <detaileddescription>
                    <para>
                        Source port number
                        <simplesect kind="return">
                            <para>Word </para>
                        </simplesect>
                        <simplesect kind="note">
                            <para>TCP protocol Header structure. &quot;Source&quot; field </para>
                        </simplesect>
                    </para>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="CAPLPluginApi.h" line="1897" column="58" />
            </memberdef>
            <memberdef kind="function" id="classcapl_1_1_i_t_c_p_1a9d20ea91fda7f6250b4f6eb06fa66903" prot="public"
                       static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
                <type>
                    <ref refid="classcapl_1_1_i_ethernet_packet_protocol_word_field" kindref="compound">IEthernetPacketProtocolWordField</ref>
                    &amp;
                </type>
                <definition>virtual IEthernetPacketProtocolWordField &amp; capl::ITCP::destination</definition>
                <argsstring>()=0</argsstring>
                <name>destination</name>
                <briefdescription>
                </briefdescription>
                <detaileddescription>
                    <para>
                        Destination port number
                        <simplesect kind="return">
                            <para>Word </para>
                        </simplesect>
                        <simplesect kind="note">
                            <para>TCP protocol Header structure. &quot;Destination&quot; field </para>
                        </simplesect>
                    </para>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="CAPLPluginApi.h" line="1904" column="58" />
            </memberdef>
            <memberdef kind="function" id="classcapl_1_1_i_t_c_p_1aa974f75749270b2158ff8a5d3cf5eb94" prot="public"
                       static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
                <type>
                    <ref refid="classcapl_1_1_i_ethernet_packet_protocol_d_word_field" kindref="compound">IEthernetPacketProtocolDWordField</ref>
                    &amp;
                </type>
                <definition>virtual IEthernetPacketProtocolDWordField &amp; capl::ITCP::sequence</definition>
                <argsstring>()=0</argsstring>
                <name>sequence</name>
                <briefdescription>
                </briefdescription>
                <detaileddescription>
                    <para>
                        Destination port number
                        <simplesect kind="return">
                            <para>DWord </para>
                        </simplesect>
                        <simplesect kind="note">
                            <para>TCP protocol Header structure. &quot;Sequence&quot; field </para>
                        </simplesect>
                    </para>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="CAPLPluginApi.h" line="1911" column="59" />
            </memberdef>
            <memberdef kind="function" id="classcapl_1_1_i_t_c_p_1a716572b20a985afa9813186d541d8309" prot="public"
                       static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
                <type>
                    <ref refid="classcapl_1_1_i_ethernet_packet_protocol_d_word_field" kindref="compound">IEthernetPacketProtocolDWordField</ref>
                    &amp;
                </type>
                <definition>virtual IEthernetPacketProtocolDWordField &amp; capl::ITCP::ackNumber</definition>
                <argsstring>()=0</argsstring>
                <name>ackNumber</name>
                <briefdescription>
                </briefdescription>
                <detaileddescription>
                    <para>
                        Destination port number
                        <simplesect kind="return">
                            <para>DWord </para>
                        </simplesect>
                        <simplesect kind="note">
                            <para>TCP protocol Header structure. &quot;AckNumber&quot; field </para>
                        </simplesect>
                    </para>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="CAPLPluginApi.h" line="1918" column="59" />
            </memberdef>
            <memberdef kind="function" id="classcapl_1_1_i_t_c_p_1af75bc467f5e0704bed3e17fa8f7a65d6" prot="public"
                       static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
                <type>
                    <ref refid="classcapl_1_1_i_ethernet_packet_protocol_byte_field" kindref="compound">IEthernetPacketProtocolByteField</ref>
                    &amp;
                </type>
                <definition>virtual IEthernetPacketProtocolByteField &amp; capl::ITCP::offset</definition>
                <argsstring>()=0</argsstring>
                <name>offset</name>
                <briefdescription>
                </briefdescription>
                <detaileddescription>
                    <para>
                        Number of 32 bit words in the TCP Header. This indicates where the data begins. The TCP header including options is an integral number of 32 bits long
                        <simplesect kind="return">
                            <para>Byte </para>
                        </simplesect>
                        <simplesect kind="note">
                            <para>TCP protocol Header structure. &quot;Offset&quot; field </para>
                        </simplesect>
                    </para>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="CAPLPluginApi.h" line="1925" column="58" />
            </memberdef>
            <memberdef kind="function" id="classcapl_1_1_i_t_c_p_1a46a300324f707c2c20cfadeb5589df44" prot="public"
                       static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
                <type>
                    <ref refid="classcapl_1_1_i_ethernet_packet_protocol_byte_field" kindref="compound">IEthernetPacketProtocolByteField</ref>
                    &amp;
                </type>
                <definition>virtual IEthernetPacketProtocolByteField &amp; capl::ITCP::flags</definition>
                <argsstring>()=0</argsstring>
                <name>flags</name>
                <briefdescription>
                </briefdescription>
                <detaileddescription>
                    <para>
                        8 bits (from lsb to msb): FIN - more data from sender SYN - Synchronize sequence numbers RST - Reset the connection PSH - Push function ACK - Acknowledgment field significant URG - Urgent Pointer field significant ECE - ECN-Echo CWR - Congestion Window Reduced
                        <simplesect kind="return">
                            <para>Byte </para>
                        </simplesect>
                        <simplesect kind="note">
                            <para>TCP protocol Header structure. &quot;Flags&quot; field </para>
                        </simplesect>
                    </para>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="CAPLPluginApi.h" line="1940" column="58" />
            </memberdef>
            <memberdef kind="function" id="classcapl_1_1_i_t_c_p_1ac2075afdf9636bf370c8109005fca4a8" prot="public"
                       static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
                <type>
                    <ref refid="classcapl_1_1_i_ethernet_packet_protocol_word_field" kindref="compound">IEthernetPacketProtocolWordField</ref>
                    &amp;
                </type>
                <definition>virtual IEthernetPacketProtocolWordField &amp; capl::ITCP::window</definition>
                <argsstring>()=0</argsstring>
                <name>window</name>
                <briefdescription>
                </briefdescription>
                <detaileddescription>
                    <para>
                        The number of data bytes beginning with the one indicated in the field which the sender of this segment is willing to accept
                        <simplesect kind="return">
                            <para>Word </para>
                        </simplesect>
                        <simplesect kind="note">
                            <para>TCP protocol Header structure. &quot;Window&quot; field </para>
                        </simplesect>
                    </para>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="CAPLPluginApi.h" line="1947" column="58" />
            </memberdef>
            <memberdef kind="function" id="classcapl_1_1_i_t_c_p_1aea23511e4f019dc775935dcb10a5defc" prot="public"
                       static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
                <type>
                    <ref refid="classcapl_1_1_i_ethernet_packet_protocol_word_field" kindref="compound">IEthernetPacketProtocolWordField</ref>
                    &amp;
                </type>
                <definition>virtual IEthernetPacketProtocolWordField &amp; capl::ITCP::checksum</definition>
                <argsstring>()=0</argsstring>
                <name>checksum</name>
                <briefdescription>
                </briefdescription>
                <detaileddescription>
                    <para>
                        The 16 bit one&apos;s complement of the one&apos;s complement sum of all 16 bit words in the header and text. If a segment contains an odd number of header and text bytes to be checksummed, the last byte is padded on the right with zeros to form a 16 bit word for checksum purposes. The pad is not transmitted as part of the segment. While computing the checksum, the checksum field itself is replaced with zeros
                        <simplesect kind="return">
                            <para>Word </para>
                        </simplesect>
                        <simplesect kind="note">
                            <para>TCP protocol Header structure. &quot;Checksum&quot; field </para>
                        </simplesect>
                    </para>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="CAPLPluginApi.h" line="1954" column="58" />
            </memberdef>
            <memberdef kind="function" id="classcapl_1_1_i_t_c_p_1a757492991b38963516eec109f18c5767" prot="public"
                       static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
                <type>
                    <ref refid="classcapl_1_1_i_ethernet_packet_protocol_word_field" kindref="compound">IEthernetPacketProtocolWordField</ref>
                    &amp;
                </type>
                <definition>virtual IEthernetPacketProtocolWordField &amp; capl::ITCP::pointer</definition>
                <argsstring>()=0</argsstring>
                <name>pointer</name>
                <briefdescription>
                </briefdescription>
                <detaileddescription>
                    <para>
                        16 bit offset from the sequence number indicating the last urgent data byte
                        <simplesect kind="return">
                            <para>Word </para>
                        </simplesect>
                        <simplesect kind="note">
                            <para>TCP protocol Header structure. &quot;Pointer&quot; field </para>
                        </simplesect>
                    </para>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="CAPLPluginApi.h" line="1961" column="58" />
            </memberdef>
        </sectiondef>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inheritancegraph>
            <node id="2">
                <label>capl::IEthernetPacketProtocol</label>
                <link refid="classcapl_1_1_i_ethernet_packet_protocol" />
            </node>
            <node id="1">
                <label>capl::ITCP</label>
                <link refid="classcapl_1_1_i_t_c_p" />
                <childnode refid="2" relation="public-inheritance">
                </childnode>
            </node>
        </inheritancegraph>
        <collaborationgraph>
            <node id="2">
                <label>capl::IEthernetPacketProtocol</label>
                <link refid="classcapl_1_1_i_ethernet_packet_protocol" />
            </node>
            <node id="1">
                <label>capl::ITCP</label>
                <link refid="classcapl_1_1_i_t_c_p" />
                <childnode refid="2" relation="public-inheritance">
                </childnode>
            </node>
        </collaborationgraph>
        <location file="CAPLPluginApi.h" line="1888" column="5" bodyfile="CAPLPluginApi.h" bodystart="1889"
                  bodyend="1962" />
        <listofallmembers>
            <member refid="classcapl_1_1_i_t_c_p_1a716572b20a985afa9813186d541d8309" prot="public" virt="pure-virtual">
                <scope>capl::ITCP</scope><name>ackNumber</name>
            </member>
            <member refid="classcapl_1_1_i_ethernet_packet_protocol_1a7e0b85de5365949422d44b319c9c9b4b" prot="public"
                    virt="pure-virtual">
                <scope>capl::ITCP</scope><name>Byte</name>
            </member>
            <member refid="classcapl_1_1_i_ethernet_packet_protocol_1af3d897a6e01ca1307e3402bac8ca3ea6" prot="public"
                    virt="pure-virtual">
                <scope>capl::ITCP</scope><name>byteLength</name>
            </member>
            <member refid="classcapl_1_1_i_ethernet_packet_protocol_1ad75c16f80e01431df2d5550388f7bad5" prot="public"
                    virt="pure-virtual">
                <scope>capl::ITCP</scope><name>byteOffset</name>
            </member>
            <member refid="classcapl_1_1_i_ethernet_packet_protocol_1ae028555aa44b2b4d089f84784bab9818" prot="public"
                    virt="pure-virtual">
                <scope>capl::ITCP</scope><name>Char</name>
            </member>
            <member refid="classcapl_1_1_i_t_c_p_1aea23511e4f019dc775935dcb10a5defc" prot="public" virt="pure-virtual">
                <scope>capl::ITCP</scope><name>checksum</name>
            </member>
            <member refid="classcapl_1_1_i_ethernet_packet_protocol_1ae73092fb840043ad7629f7471275dbd6" prot="public"
                    virt="pure-virtual">
                <scope>capl::ITCP</scope><name>CompletePacket</name>
            </member>
            <member refid="classcapl_1_1_i_ethernet_packet_protocol_1a9009ffb90167216e0b26a3d30eb1404a" prot="public"
                    virt="pure-virtual">
                <scope>capl::ITCP</scope><name>Data</name>
            </member>
            <member refid="classcapl_1_1_i_t_c_p_1a9d20ea91fda7f6250b4f6eb06fa66903" prot="public" virt="pure-virtual">
                <scope>capl::ITCP</scope><name>destination</name>
            </member>
            <member refid="classcapl_1_1_i_ethernet_packet_protocol_1a56ef87fe52db2a14705c7f7fce218dbf" prot="public"
                    virt="pure-virtual">
                <scope>capl::ITCP</scope><name>Dword</name>
            </member>
            <member refid="classcapl_1_1_i_t_c_p_1a46a300324f707c2c20cfadeb5589df44" prot="public" virt="pure-virtual">
                <scope>capl::ITCP</scope><name>flags</name>
            </member>
            <member refid="classcapl_1_1_i_ethernet_packet_protocol_1a8c521930cccbd833489b54768033d386" prot="public"
                    virt="pure-virtual">
                <scope>capl::ITCP</scope><name>GetData</name>
            </member>
            <member refid="classcapl_1_1_i_ethernet_packet_protocol_1ab3b3995e13e2885ec7e69a108e97a939" prot="public"
                    virt="pure-virtual">
                <scope>capl::ITCP</scope><name>GetDataOffset</name>
            </member>
            <member refid="classcapl_1_1_i_ethernet_packet_protocol_1ae7256f92b0ffd7b8571ab0643e225c5e" prot="public"
                    virt="pure-virtual">
                <scope>capl::ITCP</scope><name>Init</name>
            </member>
            <member refid="classcapl_1_1_i_ethernet_packet_protocol_1af9d4516c27afadd84949aad159b7422d" prot="public"
                    virt="pure-virtual">
                <scope>capl::ITCP</scope><name>IsAvailable</name>
            </member>
            <member refid="classcapl_1_1_i_ethernet_packet_protocol_1aacc10aa8d426f654d6db5cfc8519df3a" prot="public"
                    virt="pure-virtual">
                <scope>capl::ITCP</scope><name>Long</name>
            </member>
            <member refid="classcapl_1_1_i_ethernet_packet_protocol_1afbd981a2fe3924fdc098c694da13662c" prot="public"
                    virt="pure-virtual">
                <scope>capl::ITCP</scope><name>LongLong</name>
            </member>
            <member refid="classcapl_1_1_i_ethernet_packet_protocol_1a3a82eae1785e7eb7823fa7a790d25db7" prot="public"
                    virt="pure-virtual">
                <scope>capl::ITCP</scope><name>nextOffset</name>
            </member>
            <member refid="classcapl_1_1_i_t_c_p_1af75bc467f5e0704bed3e17fa8f7a65d6" prot="public" virt="pure-virtual">
                <scope>capl::ITCP</scope><name>offset</name>
            </member>
            <member refid="classcapl_1_1_i_t_c_p_1a757492991b38963516eec109f18c5767" prot="public" virt="pure-virtual">
                <scope>capl::ITCP</scope><name>pointer</name>
            </member>
            <member refid="classcapl_1_1_i_ethernet_packet_protocol_1ae999ac355b7cea884f0d7df23e30e47a" prot="public"
                    virt="pure-virtual">
                <scope>capl::ITCP</scope><name>Qword</name>
            </member>
            <member refid="classcapl_1_1_i_ethernet_packet_protocol_1a0d204ced6e880ed78bbd371393a70039" prot="public"
                    virt="pure-virtual">
                <scope>capl::ITCP</scope><name>ResizeData</name>
            </member>
            <member refid="classcapl_1_1_i_t_c_p_1aa974f75749270b2158ff8a5d3cf5eb94" prot="public" virt="pure-virtual">
                <scope>capl::ITCP</scope><name>sequence</name>
            </member>
            <member refid="classcapl_1_1_i_ethernet_packet_protocol_1ac88b4003564a0e8e324f871efce88e4a" prot="public"
                    virt="pure-virtual">
                <scope>capl::ITCP</scope><name>SetData</name>
            </member>
            <member refid="classcapl_1_1_i_ethernet_packet_protocol_1a17e2f454b4b88e4d0a2ccabb6c1665a2" prot="public"
                    virt="pure-virtual">
                <scope>capl::ITCP</scope><name>SetDataOffset</name>
            </member>
            <member refid="classcapl_1_1_i_ethernet_packet_protocol_1a61ff67bd20f13c7f70902139a3de9841" prot="public"
                    virt="pure-virtual">
                <scope>capl::ITCP</scope><name>Short</name>
            </member>
            <member refid="classcapl_1_1_i_t_c_p_1a546fd7c7ff8f46ab6012256be3d36a86" prot="public" virt="pure-virtual">
                <scope>capl::ITCP</scope><name>source</name>
            </member>
            <member refid="classcapl_1_1_i_t_c_p_1ac2075afdf9636bf370c8109005fca4a8" prot="public" virt="pure-virtual">
                <scope>capl::ITCP</scope><name>window</name>
            </member>
            <member refid="classcapl_1_1_i_ethernet_packet_protocol_1a4972ed0ccef2a1dd4c6dec2cfdcb403b" prot="public"
                    virt="pure-virtual">
                <scope>capl::ITCP</scope><name>Word</name>
            </member>
        </listofallmembers>
    </compounddef>
</doxygen>