<?xml version="1.0"?>
<doc>
    <assembly>
        <name>CarLibrary.Fakes</name>
    </assembly>
    <members>
        <member name="T:CarLibrary.Fakes.ShimCar">
            <summary>Тип оболочки совместимости для CarLibrary.Car</summary>
        </member>
        <member name="M:CarLibrary.Fakes.ShimCar.#ctor(CarLibrary.Car)">
            <summary>Инициализация новой оболочки совместимости для заданного экземпляра</summary>
        </member>
        <member name="M:CarLibrary.Fakes.ShimCar.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:CarLibrary.Fakes.ShimCar.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:CarLibrary.Fakes.ShimCar.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:CarLibrary.Fakes.ShimCar.Constructor">
            <summary>Задает оболочка совместимости Car.Car()</summary>
        </member>
        <member name="P:CarLibrary.Fakes.ShimCar.ConstructorStringInt32Int32">
            <summary>Задает оболочка совместимости Car.Car(String name, Int32 maxSp, Int32 currSp)</summary>
        </member>
        <member name="P:CarLibrary.Fakes.ShimCar.CurrentSpeedGet">
            <summary>Задает оболочка совместимости Car.get_CurrentSpeed()</summary>
        </member>
        <member name="P:CarLibrary.Fakes.ShimCar.CurrentSpeedSetInt32">
            <summary>Задает оболочка совместимости Car.set_CurrentSpeed(Int32 value)</summary>
        </member>
        <member name="P:CarLibrary.Fakes.ShimCar.EngineStateGet">
            <summary>Задает оболочка совместимости Car.get_EngineState()</summary>
        </member>
        <member name="P:CarLibrary.Fakes.ShimCar.MaxSpeedGet">
            <summary>Задает оболочка совместимости Car.get_MaxSpeed()</summary>
        </member>
        <member name="P:CarLibrary.Fakes.ShimCar.MaxSpeedSetInt32">
            <summary>Задает оболочка совместимости Car.set_MaxSpeed(Int32 value)</summary>
        </member>
        <member name="P:CarLibrary.Fakes.ShimCar.PetNameGet">
            <summary>Задает оболочка совместимости Car.get_PetName()</summary>
        </member>
        <member name="P:CarLibrary.Fakes.ShimCar.PetNameSetString">
            <summary>Задает оболочка совместимости Car.set_PetName(String value)</summary>
        </member>
        <member name="T:CarLibrary.Fakes.ShimCar.AllInstances">
            <summary>Определение оболочек совместимости для всех членов экземпляров</summary>
        </member>
        <member name="P:CarLibrary.Fakes.ShimCar.AllInstances.CurrentSpeedGet">
            <summary>Задает оболочка совместимости Car.get_CurrentSpeed()</summary>
        </member>
        <member name="P:CarLibrary.Fakes.ShimCar.AllInstances.CurrentSpeedSetInt32">
            <summary>Задает оболочка совместимости Car.set_CurrentSpeed(Int32 value)</summary>
        </member>
        <member name="P:CarLibrary.Fakes.ShimCar.AllInstances.EngineStateGet">
            <summary>Задает оболочка совместимости Car.get_EngineState()</summary>
        </member>
        <member name="P:CarLibrary.Fakes.ShimCar.AllInstances.MaxSpeedGet">
            <summary>Задает оболочка совместимости Car.get_MaxSpeed()</summary>
        </member>
        <member name="P:CarLibrary.Fakes.ShimCar.AllInstances.MaxSpeedSetInt32">
            <summary>Задает оболочка совместимости Car.set_MaxSpeed(Int32 value)</summary>
        </member>
        <member name="P:CarLibrary.Fakes.ShimCar.AllInstances.PetNameGet">
            <summary>Задает оболочка совместимости Car.get_PetName()</summary>
        </member>
        <member name="P:CarLibrary.Fakes.ShimCar.AllInstances.PetNameSetString">
            <summary>Задает оболочка совместимости Car.set_PetName(String value)</summary>
        </member>
        <member name="T:CarLibrary.Fakes.ShimMiniVan">
            <summary>Тип оболочки совместимости для CarLibrary.MiniVan</summary>
        </member>
        <member name="M:CarLibrary.Fakes.ShimMiniVan.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="M:CarLibrary.Fakes.ShimMiniVan.#ctor(CarLibrary.MiniVan)">
            <summary>Инициализация новой оболочки совместимости для заданного экземпляра</summary>
        </member>
        <member name="M:CarLibrary.Fakes.ShimMiniVan.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:CarLibrary.Fakes.ShimMiniVan.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:CarLibrary.Fakes.ShimMiniVan.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:CarLibrary.Fakes.ShimMiniVan.Constructor">
            <summary>Задает оболочка совместимости MiniVan.MiniVan()</summary>
        </member>
        <member name="P:CarLibrary.Fakes.ShimMiniVan.ConstructorStringInt32Int32">
            <summary>Задает оболочка совместимости MiniVan.MiniVan(String name, Int32 maxSp, Int32 currSp)</summary>
        </member>
        <member name="P:CarLibrary.Fakes.ShimMiniVan.TurboBoost">
            <summary>Задает оболочка совместимости MiniVan.TurboBoost()</summary>
        </member>
        <member name="T:CarLibrary.Fakes.ShimMiniVan.AllInstances">
            <summary>Определение оболочек совместимости для всех членов экземпляров</summary>
        </member>
        <member name="P:CarLibrary.Fakes.ShimMiniVan.AllInstances.TurboBoost">
            <summary>Задает оболочка совместимости MiniVan.TurboBoost()</summary>
        </member>
        <member name="T:CarLibrary.Fakes.ShimSportsCar">
            <summary>Тип оболочки совместимости для CarLibrary.SportsCar</summary>
        </member>
        <member name="M:CarLibrary.Fakes.ShimSportsCar.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="M:CarLibrary.Fakes.ShimSportsCar.#ctor(CarLibrary.SportsCar)">
            <summary>Инициализация новой оболочки совместимости для заданного экземпляра</summary>
        </member>
        <member name="M:CarLibrary.Fakes.ShimSportsCar.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:CarLibrary.Fakes.ShimSportsCar.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:CarLibrary.Fakes.ShimSportsCar.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:CarLibrary.Fakes.ShimSportsCar.Constructor">
            <summary>Задает оболочка совместимости SportsCar.SportsCar()</summary>
        </member>
        <member name="P:CarLibrary.Fakes.ShimSportsCar.ConstructorStringInt32Int32">
            <summary>Задает оболочка совместимости SportsCar.SportsCar(String name, Int32 maxSp, Int32 currSp)</summary>
        </member>
        <member name="P:CarLibrary.Fakes.ShimSportsCar.TurboBoost">
            <summary>Задает оболочка совместимости SportsCar.TurboBoost()</summary>
        </member>
        <member name="T:CarLibrary.Fakes.ShimSportsCar.AllInstances">
            <summary>Определение оболочек совместимости для всех членов экземпляров</summary>
        </member>
        <member name="P:CarLibrary.Fakes.ShimSportsCar.AllInstances.TurboBoost">
            <summary>Задает оболочка совместимости SportsCar.TurboBoost()</summary>
        </member>
        <member name="T:CarLibrary.Fakes.StubCar">
            <summary>Тип заглушки CarLibrary.Car</summary>
        </member>
        <member name="M:CarLibrary.Fakes.StubCar.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:CarLibrary.Fakes.StubCar.#ctor(System.String,System.Int32,System.Int32)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:CarLibrary.Fakes.StubCar.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubCar</summary>
        </member>
        <member name="M:CarLibrary.Fakes.StubCar.TurboBoost">
            <summary>Задает заглушка Car.TurboBoost()</summary>
        </member>
        <member name="F:CarLibrary.Fakes.StubCar.TurboBoost01">
            <summary>Задает stub Car.TurboBoost()</summary>
        </member>
        <member name="P:CarLibrary.Fakes.StubCar.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:CarLibrary.Fakes.StubCar.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:CarLibrary.Fakes.StubCar.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:CarLibrary.Fakes.StubMiniVan">
            <summary>Тип заглушки CarLibrary.MiniVan</summary>
        </member>
        <member name="M:CarLibrary.Fakes.StubMiniVan.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:CarLibrary.Fakes.StubMiniVan.#ctor(System.String,System.Int32,System.Int32)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:CarLibrary.Fakes.StubMiniVan.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubMiniVan</summary>
        </member>
        <member name="M:CarLibrary.Fakes.StubMiniVan.TurboBoost">
            <summary>Задает заглушка MiniVan.TurboBoost()</summary>
        </member>
        <member name="F:CarLibrary.Fakes.StubMiniVan.TurboBoost01">
            <summary>Задает stub MiniVan.TurboBoost()</summary>
        </member>
        <member name="P:CarLibrary.Fakes.StubMiniVan.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:CarLibrary.Fakes.StubMiniVan.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:CarLibrary.Fakes.StubMiniVan.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:CarLibrary.Fakes.StubSportsCar">
            <summary>Тип заглушки CarLibrary.SportsCar</summary>
        </member>
        <member name="M:CarLibrary.Fakes.StubSportsCar.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:CarLibrary.Fakes.StubSportsCar.#ctor(System.String,System.Int32,System.Int32)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:CarLibrary.Fakes.StubSportsCar.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubSportsCar</summary>
        </member>
        <member name="M:CarLibrary.Fakes.StubSportsCar.TurboBoost">
            <summary>Задает заглушка SportsCar.TurboBoost()</summary>
        </member>
        <member name="F:CarLibrary.Fakes.StubSportsCar.TurboBoost01">
            <summary>Задает stub SportsCar.TurboBoost()</summary>
        </member>
        <member name="P:CarLibrary.Fakes.StubSportsCar.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:CarLibrary.Fakes.StubSportsCar.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:CarLibrary.Fakes.StubSportsCar.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
    </members>
</doc>
