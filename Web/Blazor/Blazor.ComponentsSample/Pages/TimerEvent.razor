@using System.Timers
@implements IDisposable

<h4>Timer Event</h4>

@code {
    [Parameter]
    public int DelaySeconds { get; set; } = 10;

    [Parameter]
    public EventCallback<DateTime> OnTimerCallback { get; set; }

    public void Start() => _timer?.Start();

    public void Stop() => _timer?.Stop();

    private Timer? _timer;
    protected override void OnInitialized()
    {
        _timer = new()
        {
            Interval = 1000 * DelaySeconds
        };
        _timer.Elapsed += async (sender, e) =>
        {
            await OnTimerCallback.InvokeAsync(e.SignalTime).ConfigureAwait(false);
        };
    }

    public void Dispose() => _timer?.Dispose();
}