@using AjaxHelpers.Models
@model string

@{
    ViewBag.Title = "GetPeople";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var ajaxOptions = new AjaxOptions
    {
        UpdateTargetId = "tableBody",
        Url = Url.Action("GetPeopleDataMix"), // NOTE: Если поддержка JS отключена, будет использоваться синхронная отправка формы
        LoadingElementId = "loading",
        LoadingElementDuration = 1000,
        OnSuccess = "processData"
    };
}

<script type="text/javascript">
    function processData(data) {
        var target = $("#tableBody");
        target.empty();
        for (var i = 0; i < data.length; i++) {
            var person = data[i];
            target.append("<tr><td>" + person.FirstName + "</td><td>" + person.LastName + "</td><td>" + person.Role + "</td></tr>");
        }
    }
</script>

<h2>@ViewBag.Title</h2>

<div id="loading" class="load" style="display: none;">
    <p>Loading data...</p>
</div>

<table>
    <thead>
        <tr>
            <th>First</th>
            <th>Last</th>
            <th>Role</th>
        </tr>
    </thead>
    <tbody id="tableBody">
        @Html.Action("GetPeopleDataMix", new { selectedRole = Model })
    </tbody>
</table>

@using (Ajax.BeginForm(ajaxOptions))
{
    <div>
        @Html.DropDownList("selectedRole", new SelectList(new[] { "All" }.Concat(Enum.GetNames(typeof(Role)))))
        <button type="submit">Submit</button>
    </div>
}

<div>
    @foreach (var role in Enum.GetNames(typeof(Role)))
    {
        <div class="ajaxLink">
            @Ajax.ActionLink(role, "GetPeople",
                new { selectedRole = role },
                new AjaxOptions
                {
                    Url = Url.Action("GetPeopleDataMix", new { selectedRole = role }),
                    OnSuccess = "processData"
                })
        </div>
    }
</div>