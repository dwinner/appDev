//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("RoomReservationModel", "FK_Reservation_To_MeetingRoom", "MeetingRooms", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProCSharpSampleWeb.DataAccess.MeetingRoom), "Reservation", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProCSharpSampleWeb.DataAccess.Reservation), true)]

#endregion

namespace ProCSharpSampleWeb.DataAccess
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class RoomReservationEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new RoomReservationEntities object using the connection string found in the 'RoomReservationEntities' section of the application configuration file.
        /// </summary>
        public RoomReservationEntities() : base("name=RoomReservationEntities", "RoomReservationEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new RoomReservationEntities object.
        /// </summary>
        public RoomReservationEntities(string connectionString) : base(connectionString, "RoomReservationEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new RoomReservationEntities object.
        /// </summary>
        public RoomReservationEntities(EntityConnection connection) : base(connection, "RoomReservationEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MeetingRoom> MeetingRooms
        {
            get
            {
                if ((_MeetingRooms == null))
                {
                    _MeetingRooms = base.CreateObjectSet<MeetingRoom>("MeetingRooms");
                }
                return _MeetingRooms;
            }
        }
        private ObjectSet<MeetingRoom> _MeetingRooms;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Reservation> Reservations
        {
            get
            {
                if ((_Reservations == null))
                {
                    _Reservations = base.CreateObjectSet<Reservation>("Reservations");
                }
                return _Reservations;
            }
        }
        private ObjectSet<Reservation> _Reservations;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MeetingRooms EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMeetingRooms(MeetingRoom meetingRoom)
        {
            base.AddObject("MeetingRooms", meetingRoom);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Reservations EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToReservations(Reservation reservation)
        {
            base.AddObject("Reservations", reservation);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RoomReservationModel", Name="MeetingRoom")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MeetingRoom : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MeetingRoom object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="roomName">Initial value of the RoomName property.</param>
        public static MeetingRoom CreateMeetingRoom(global::System.Int32 id, global::System.String roomName)
        {
            MeetingRoom meetingRoom = new MeetingRoom();
            meetingRoom.Id = id;
            meetingRoom.RoomName = roomName;
            return meetingRoom;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RoomName
        {
            get
            {
                return _RoomName;
            }
            set
            {
                OnRoomNameChanging(value);
                ReportPropertyChanging("RoomName");
                _RoomName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("RoomName");
                OnRoomNameChanged();
            }
        }
        private global::System.String _RoomName;
        partial void OnRoomNameChanging(global::System.String value);
        partial void OnRoomNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RoomReservationModel", "FK_Reservation_To_MeetingRoom", "Reservation")]
        public EntityCollection<Reservation> Reservations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Reservation>("RoomReservationModel.FK_Reservation_To_MeetingRoom", "Reservation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Reservation>("RoomReservationModel.FK_Reservation_To_MeetingRoom", "Reservation", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RoomReservationModel", Name="Reservation")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Reservation : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Reservation object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="reservedFrom">Initial value of the ReservedFrom property.</param>
        /// <param name="reservedTo">Initial value of the ReservedTo property.</param>
        /// <param name="contact">Initial value of the Contact property.</param>
        /// <param name="roomId">Initial value of the RoomId property.</param>
        public static Reservation CreateReservation(global::System.Int32 id, global::System.DateTime reservedFrom, global::System.DateTime reservedTo, global::System.String contact, global::System.Int32 roomId)
        {
            Reservation reservation = new Reservation();
            reservation.Id = id;
            reservation.ReservedFrom = reservedFrom;
            reservation.ReservedTo = reservedTo;
            reservation.Contact = contact;
            reservation.RoomId = roomId;
            return reservation;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ReservedFrom
        {
            get
            {
                return _ReservedFrom;
            }
            set
            {
                OnReservedFromChanging(value);
                ReportPropertyChanging("ReservedFrom");
                _ReservedFrom = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ReservedFrom");
                OnReservedFromChanged();
            }
        }
        private global::System.DateTime _ReservedFrom;
        partial void OnReservedFromChanging(global::System.DateTime value);
        partial void OnReservedFromChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ReservedTo
        {
            get
            {
                return _ReservedTo;
            }
            set
            {
                OnReservedToChanging(value);
                ReportPropertyChanging("ReservedTo");
                _ReservedTo = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ReservedTo");
                OnReservedToChanged();
            }
        }
        private global::System.DateTime _ReservedTo;
        partial void OnReservedToChanging(global::System.DateTime value);
        partial void OnReservedToChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Contact
        {
            get
            {
                return _Contact;
            }
            set
            {
                OnContactChanging(value);
                ReportPropertyChanging("Contact");
                _Contact = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Contact");
                OnContactChanged();
            }
        }
        private global::System.String _Contact;
        partial void OnContactChanging(global::System.String value);
        partial void OnContactChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RoomId
        {
            get
            {
                return _RoomId;
            }
            set
            {
                OnRoomIdChanging(value);
                ReportPropertyChanging("RoomId");
                _RoomId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RoomId");
                OnRoomIdChanged();
            }
        }
        private global::System.Int32 _RoomId;
        partial void OnRoomIdChanging(global::System.Int32 value);
        partial void OnRoomIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RoomReservationModel", "FK_Reservation_To_MeetingRoom", "MeetingRooms")]
        public MeetingRoom MeetingRoom
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MeetingRoom>("RoomReservationModel.FK_Reservation_To_MeetingRoom", "MeetingRooms").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MeetingRoom>("RoomReservationModel.FK_Reservation_To_MeetingRoom", "MeetingRooms").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MeetingRoom> MeetingRoomReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MeetingRoom>("RoomReservationModel.FK_Reservation_To_MeetingRoom", "MeetingRooms");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MeetingRoom>("RoomReservationModel.FK_Reservation_To_MeetingRoom", "MeetingRooms", value);
                }
            }
        }

        #endregion

    }

    #endregion

    
}
