<common:LayoutAwarePage
    x:Name="pageRoot"
    x:Class="Wrox.Metro.MenuItemsPage"
    DataContext="{Binding DefaultViewModel, RelativeSource={RelativeSource Self}}"
    IsTabStop="false"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:Wrox.Metro"
    xmlns:common="using:Wrox.Metro.Common"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">

  <Page.Resources>

    <!-- Collection of items displayed by this page -->
    <CollectionViewSource
            x:Name="itemsViewSource"
            Source="{Binding Items}"/>
    <CollectionViewSource
      x:Name="cardViewSource"
      Source="{Binding Card}" />

  </Page.Resources>
  <Page.BottomAppBar>
    <AppBar IsSticky="True">
      <Grid>
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="50*"/>
          <ColumnDefinition Width="50*"/>
        </Grid.ColumnDefinitions>
        <StackPanel x:Name="LeftCommands" Orientation="Horizontal" Grid.Column="0" HorizontalAlignment="Left">
          <Button Style="{StaticResource SaveAppBarButtonStyle}" HorizontalAlignment="Left" Tag="Save" Click="OnSave" />
          <Button Style="{StaticResource DownloadAppBarButtonStyle}" HorizontalAlignment="Left" Tag="Open" Click="OnOpen" />
        </StackPanel>
        <StackPanel x:Name="RightCommands" Orientation="Horizontal" Grid.Column="1" HorizontalAlignment="Right">
          <Button Style="{StaticResource AddAppBarButtonStyle}" HorizontalAlignment="Left" Tag="Add" Click="OnAddMenuItem" />
          <Button Style="{StaticResource DeleteAppBarButtonStyle}" HorizontalAlignment="Left" Tag="Delete" Click="OnDeleteMenuItem" />
        </StackPanel>
      </Grid>


    </AppBar>
  </Page.BottomAppBar>

  <!--
        This grid acts as a root panel for the page that defines two rows:
        * Row 0 contains the back button and page title
        * Row 1 contains the rest of the page layout
    -->
  <Grid Style="{StaticResource LayoutRootStyle}">
    <Grid.RowDefinitions>
      <RowDefinition Height="140"/>
      <RowDefinition Height="*"/>
    </Grid.RowDefinitions>

    <!-- Back button and page title -->
    <Grid>
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="Auto"/>
        <ColumnDefinition Width="*"/>
      </Grid.ColumnDefinitions>
      <Button x:Name="backButton" Click="GoBack" IsEnabled="{Binding Frame.CanGoBack, ElementName=pageRoot}" Style="{StaticResource BackButtonStyle}"/>
      <TextBlock x:Name="pageTitle" Grid.Column="1" Text="{StaticResource AppName}" Style="{StaticResource PageHeaderTextStyle}"/>
    </Grid>
    <Image Grid.Row="1" Source="{Binding Image, Source={StaticResource cardViewSource}}" Stretch="UniformToFill" />
    <!-- Horizontal scrolling grid used in most view states -->
    <GridView
            x:Name="itemGridView"
            AutomationProperties.AutomationId="ItemsGridView"
            AutomationProperties.Name="Items"
            TabIndex="1"
            Grid.Row="1"
            Margin="0,-4,0,0"
            Padding="116,0,116,46"
            ItemsSource="{Binding Source={StaticResource itemsViewSource}}"
            ItemTemplate="{StaticResource MenuItemTemplate}"/>

    <!-- Vertical scrolling list only used when snapped -->
    <ListView
            x:Name="itemListView"
            AutomationProperties.AutomationId="ItemsListView"
            AutomationProperties.Name="Items"
            TabIndex="1"
            Grid.Row="1"
            Visibility="Collapsed"
            Margin="0,-10,0,0"
            Padding="10,0,0,60"
            ItemsSource="{Binding Source={StaticResource itemsViewSource}}"
            ItemTemplate="{StaticResource MenuItemTemplate}"/>

    <VisualStateManager.VisualStateGroups>

      <!-- Visual states reflect the application's view state -->
      <VisualStateGroup x:Name="ApplicationViewStates">
        <VisualState x:Name="FullScreenLandscape"/>
        <VisualState x:Name="Filled"/>

        <!-- The entire page respects the narrower 100-pixel margin convention for portrait -->
        <VisualState x:Name="FullScreenPortrait">
          <Storyboard>
            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="backButton" Storyboard.TargetProperty="Style">
              <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PortraitBackButtonStyle}"/>
            </ObjectAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="itemGridView" Storyboard.TargetProperty="Padding">
              <DiscreteObjectKeyFrame KeyTime="0" Value="96,0,86,56"/>
            </ObjectAnimationUsingKeyFrames>
          </Storyboard>
        </VisualState>

        <!--
                    The back button and title have different styles when snapped, and the list representation is substituted
                    for the grid displayed in all other view states
                -->
        <VisualState x:Name="Snapped">
          <Storyboard>
            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="backButton" Storyboard.TargetProperty="Style">
              <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SnappedBackButtonStyle}"/>
            </ObjectAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="pageTitle" Storyboard.TargetProperty="Style">
              <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SnappedPageHeaderTextStyle}"/>
            </ObjectAnimationUsingKeyFrames>

            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="itemListView" Storyboard.TargetProperty="Visibility">
              <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
            </ObjectAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="itemGridView" Storyboard.TargetProperty="Visibility">
              <DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
            </ObjectAnimationUsingKeyFrames>
          </Storyboard>
        </VisualState>
      </VisualStateGroup>
    </VisualStateManager.VisualStateGroups>
  </Grid>
</common:LayoutAwarePage>
